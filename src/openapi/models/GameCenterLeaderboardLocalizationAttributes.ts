/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GameCenterLeaderboardFormatter } from './GameCenterLeaderboardFormatter';
import {
    GameCenterLeaderboardFormatterFromJSON,
    GameCenterLeaderboardFormatterFromJSONTyped,
    GameCenterLeaderboardFormatterToJSON,
} from './GameCenterLeaderboardFormatter';

/**
 * 
 * @export
 * @interface GameCenterLeaderboardLocalizationAttributes
 */
export interface GameCenterLeaderboardLocalizationAttributes {
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardLocalizationAttributes
     */
    locale?: string;
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardLocalizationAttributes
     */
    name?: string;
    /**
     * 
     * @type {GameCenterLeaderboardFormatter}
     * @memberof GameCenterLeaderboardLocalizationAttributes
     */
    formatterOverride?: GameCenterLeaderboardFormatter;
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardLocalizationAttributes
     */
    formatterSuffix?: string;
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardLocalizationAttributes
     */
    formatterSuffixSingular?: string;
}

/**
 * Check if a given object implements the GameCenterLeaderboardLocalizationAttributes interface.
 */
export function instanceOfGameCenterLeaderboardLocalizationAttributes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GameCenterLeaderboardLocalizationAttributesFromJSON(json: any): GameCenterLeaderboardLocalizationAttributes {
    return GameCenterLeaderboardLocalizationAttributesFromJSONTyped(json, false);
}

export function GameCenterLeaderboardLocalizationAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterLeaderboardLocalizationAttributes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'locale': !exists(json, 'locale') ? undefined : json['locale'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'formatterOverride': !exists(json, 'formatterOverride') ? undefined : GameCenterLeaderboardFormatterFromJSON(json['formatterOverride']),
        'formatterSuffix': !exists(json, 'formatterSuffix') ? undefined : json['formatterSuffix'],
        'formatterSuffixSingular': !exists(json, 'formatterSuffixSingular') ? undefined : json['formatterSuffixSingular'],
    };
}

export function GameCenterLeaderboardLocalizationAttributesToJSON(value?: GameCenterLeaderboardLocalizationAttributes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'locale': value.locale,
        'name': value.name,
        'formatterOverride': GameCenterLeaderboardFormatterToJSON(value.formatterOverride),
        'formatterSuffix': value.formatterSuffix,
        'formatterSuffixSingular': value.formatterSuffixSingular,
    };
}

