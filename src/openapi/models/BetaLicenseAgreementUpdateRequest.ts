/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BetaLicenseAgreementUpdateRequestData } from './BetaLicenseAgreementUpdateRequestData';
import {
    BetaLicenseAgreementUpdateRequestDataFromJSON,
    BetaLicenseAgreementUpdateRequestDataFromJSONTyped,
    BetaLicenseAgreementUpdateRequestDataToJSON,
} from './BetaLicenseAgreementUpdateRequestData';

/**
 * 
 * @export
 * @interface BetaLicenseAgreementUpdateRequest
 */
export interface BetaLicenseAgreementUpdateRequest {
    /**
     * 
     * @type {BetaLicenseAgreementUpdateRequestData}
     * @memberof BetaLicenseAgreementUpdateRequest
     */
    data: BetaLicenseAgreementUpdateRequestData;
}

/**
 * Check if a given object implements the BetaLicenseAgreementUpdateRequest interface.
 */
export function instanceOfBetaLicenseAgreementUpdateRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function BetaLicenseAgreementUpdateRequestFromJSON(json: any): BetaLicenseAgreementUpdateRequest {
    return BetaLicenseAgreementUpdateRequestFromJSONTyped(json, false);
}

export function BetaLicenseAgreementUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BetaLicenseAgreementUpdateRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': BetaLicenseAgreementUpdateRequestDataFromJSON(json['data']),
    };
}

export function BetaLicenseAgreementUpdateRequestToJSON(value?: BetaLicenseAgreementUpdateRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': BetaLicenseAgreementUpdateRequestDataToJSON(value.data),
    };
}

