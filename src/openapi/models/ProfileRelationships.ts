/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CiProductRelationshipsBundleId } from './CiProductRelationshipsBundleId';
import {
    CiProductRelationshipsBundleIdFromJSON,
    CiProductRelationshipsBundleIdFromJSONTyped,
    CiProductRelationshipsBundleIdToJSON,
} from './CiProductRelationshipsBundleId';
import type { ProfileRelationshipsCertificates } from './ProfileRelationshipsCertificates';
import {
    ProfileRelationshipsCertificatesFromJSON,
    ProfileRelationshipsCertificatesFromJSONTyped,
    ProfileRelationshipsCertificatesToJSON,
} from './ProfileRelationshipsCertificates';
import type { ProfileRelationshipsDevices } from './ProfileRelationshipsDevices';
import {
    ProfileRelationshipsDevicesFromJSON,
    ProfileRelationshipsDevicesFromJSONTyped,
    ProfileRelationshipsDevicesToJSON,
} from './ProfileRelationshipsDevices';

/**
 * 
 * @export
 * @interface ProfileRelationships
 */
export interface ProfileRelationships {
    /**
     * 
     * @type {CiProductRelationshipsBundleId}
     * @memberof ProfileRelationships
     */
    bundleId?: CiProductRelationshipsBundleId;
    /**
     * 
     * @type {ProfileRelationshipsDevices}
     * @memberof ProfileRelationships
     */
    devices?: ProfileRelationshipsDevices;
    /**
     * 
     * @type {ProfileRelationshipsCertificates}
     * @memberof ProfileRelationships
     */
    certificates?: ProfileRelationshipsCertificates;
}

/**
 * Check if a given object implements the ProfileRelationships interface.
 */
export function instanceOfProfileRelationships(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProfileRelationshipsFromJSON(json: any): ProfileRelationships {
    return ProfileRelationshipsFromJSONTyped(json, false);
}

export function ProfileRelationshipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileRelationships {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bundleId': !exists(json, 'bundleId') ? undefined : CiProductRelationshipsBundleIdFromJSON(json['bundleId']),
        'devices': !exists(json, 'devices') ? undefined : ProfileRelationshipsDevicesFromJSON(json['devices']),
        'certificates': !exists(json, 'certificates') ? undefined : ProfileRelationshipsCertificatesFromJSON(json['certificates']),
    };
}

export function ProfileRelationshipsToJSON(value?: ProfileRelationships | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bundleId': CiProductRelationshipsBundleIdToJSON(value.bundleId),
        'devices': ProfileRelationshipsDevicesToJSON(value.devices),
        'certificates': ProfileRelationshipsCertificatesToJSON(value.certificates),
    };
}

