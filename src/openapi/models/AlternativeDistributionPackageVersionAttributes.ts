/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AlternativeDistributionPackageVersionAttributes
 */
export interface AlternativeDistributionPackageVersionAttributes {
    /**
     * 
     * @type {string}
     * @memberof AlternativeDistributionPackageVersionAttributes
     */
    url?: string;
    /**
     * 
     * @type {Date}
     * @memberof AlternativeDistributionPackageVersionAttributes
     */
    urlExpirationDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof AlternativeDistributionPackageVersionAttributes
     */
    version?: string;
    /**
     * 
     * @type {string}
     * @memberof AlternativeDistributionPackageVersionAttributes
     */
    fileChecksum?: string;
    /**
     * 
     * @type {string}
     * @memberof AlternativeDistributionPackageVersionAttributes
     */
    state?: AlternativeDistributionPackageVersionAttributesStateEnum;
}


/**
 * @export
 */
export const AlternativeDistributionPackageVersionAttributesStateEnum = {
    Completed: 'COMPLETED',
    Replaced: 'REPLACED'
} as const;
export type AlternativeDistributionPackageVersionAttributesStateEnum = typeof AlternativeDistributionPackageVersionAttributesStateEnum[keyof typeof AlternativeDistributionPackageVersionAttributesStateEnum];


/**
 * Check if a given object implements the AlternativeDistributionPackageVersionAttributes interface.
 */
export function instanceOfAlternativeDistributionPackageVersionAttributes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AlternativeDistributionPackageVersionAttributesFromJSON(json: any): AlternativeDistributionPackageVersionAttributes {
    return AlternativeDistributionPackageVersionAttributesFromJSONTyped(json, false);
}

export function AlternativeDistributionPackageVersionAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlternativeDistributionPackageVersionAttributes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': !exists(json, 'url') ? undefined : json['url'],
        'urlExpirationDate': !exists(json, 'urlExpirationDate') ? undefined : (new Date(json['urlExpirationDate'])),
        'version': !exists(json, 'version') ? undefined : json['version'],
        'fileChecksum': !exists(json, 'fileChecksum') ? undefined : json['fileChecksum'],
        'state': !exists(json, 'state') ? undefined : json['state'],
    };
}

export function AlternativeDistributionPackageVersionAttributesToJSON(value?: AlternativeDistributionPackageVersionAttributes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'urlExpirationDate': value.urlExpirationDate === undefined ? undefined : (value.urlExpirationDate.toISOString()),
        'version': value.version,
        'fileChecksum': value.fileChecksum,
        'state': value.state,
    };
}

