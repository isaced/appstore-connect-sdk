/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GameCenterGroupAttributes } from './GameCenterGroupAttributes';
import {
    GameCenterGroupAttributesFromJSON,
    GameCenterGroupAttributesFromJSONTyped,
    GameCenterGroupAttributesToJSON,
} from './GameCenterGroupAttributes';

/**
 * 
 * @export
 * @interface GameCenterGroupUpdateRequestData
 */
export interface GameCenterGroupUpdateRequestData {
    /**
     * 
     * @type {string}
     * @memberof GameCenterGroupUpdateRequestData
     */
    type: GameCenterGroupUpdateRequestDataTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GameCenterGroupUpdateRequestData
     */
    id: string;
    /**
     * 
     * @type {GameCenterGroupAttributes}
     * @memberof GameCenterGroupUpdateRequestData
     */
    attributes?: GameCenterGroupAttributes;
}


/**
 * @export
 */
export const GameCenterGroupUpdateRequestDataTypeEnum = {
    GameCenterGroups: 'gameCenterGroups'
} as const;
export type GameCenterGroupUpdateRequestDataTypeEnum = typeof GameCenterGroupUpdateRequestDataTypeEnum[keyof typeof GameCenterGroupUpdateRequestDataTypeEnum];


/**
 * Check if a given object implements the GameCenterGroupUpdateRequestData interface.
 */
export function instanceOfGameCenterGroupUpdateRequestData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function GameCenterGroupUpdateRequestDataFromJSON(json: any): GameCenterGroupUpdateRequestData {
    return GameCenterGroupUpdateRequestDataFromJSONTyped(json, false);
}

export function GameCenterGroupUpdateRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterGroupUpdateRequestData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': !exists(json, 'attributes') ? undefined : GameCenterGroupAttributesFromJSON(json['attributes']),
    };
}

export function GameCenterGroupUpdateRequestDataToJSON(value?: GameCenterGroupUpdateRequestData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'id': value.id,
        'attributes': GameCenterGroupAttributesToJSON(value.attributes),
    };
}

