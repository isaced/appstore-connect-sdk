/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TerritoryAvailabilityAttributes
 */
export interface TerritoryAvailabilityAttributes {
    /**
     * 
     * @type {boolean}
     * @memberof TerritoryAvailabilityAttributes
     */
    available?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof TerritoryAvailabilityAttributes
     */
    releaseDate?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof TerritoryAvailabilityAttributes
     */
    preOrderEnabled?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof TerritoryAvailabilityAttributes
     */
    preOrderPublishDate?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof TerritoryAvailabilityAttributes
     */
    contentStatuses?: Array<TerritoryAvailabilityAttributesContentStatusesEnum>;
}


/**
 * @export
 */
export const TerritoryAvailabilityAttributesContentStatusesEnum = {
    Available: 'AVAILABLE',
    AvailableForPreorderOnDate: 'AVAILABLE_FOR_PREORDER_ON_DATE',
    ProcessingToNotAvailable: 'PROCESSING_TO_NOT_AVAILABLE',
    ProcessingToAvailable: 'PROCESSING_TO_AVAILABLE',
    ProcessingToPreOrder: 'PROCESSING_TO_PRE_ORDER',
    AvailableForSaleUnreleasedApp: 'AVAILABLE_FOR_SALE_UNRELEASED_APP',
    PreorderOnUnreleasedApp: 'PREORDER_ON_UNRELEASED_APP',
    AvailableForPreorder: 'AVAILABLE_FOR_PREORDER',
    MissingRating: 'MISSING_RATING',
    CannotSellRestrictedRating: 'CANNOT_SELL_RESTRICTED_RATING',
    BrazilRequiredTaxId: 'BRAZIL_REQUIRED_TAX_ID',
    MissingGrn: 'MISSING_GRN',
    UnverifiedGrn: 'UNVERIFIED_GRN',
    CannotSellSeventeenPlusApps: 'CANNOT_SELL_SEVENTEEN_PLUS_APPS',
    CannotSellSexuallyExplicit: 'CANNOT_SELL_SEXUALLY_EXPLICIT',
    CannotSellNonIosGames: 'CANNOT_SELL_NON_IOS_GAMES',
    CannotSellSeventeenPlusGames: 'CANNOT_SELL_SEVENTEEN_PLUS_GAMES',
    CannotSellFrequentIntenseGambling: 'CANNOT_SELL_FREQUENT_INTENSE_GAMBLING',
    CannotSellCasino: 'CANNOT_SELL_CASINO',
    CannotSellCasinoWithoutGrac: 'CANNOT_SELL_CASINO_WITHOUT_GRAC',
    CannotSellCasinoWithoutAgeVerification: 'CANNOT_SELL_CASINO_WITHOUT_AGE_VERIFICATION',
    CannotSellFrequentIntenseAlcoholTobaccoDrugs: 'CANNOT_SELL_FREQUENT_INTENSE_ALCOHOL_TOBACCO_DRUGS',
    CannotSellFrequentIntenseViolence: 'CANNOT_SELL_FREQUENT_INTENSE_VIOLENCE',
    CannotSellFrequentIntenseSexualContentNudity: 'CANNOT_SELL_FREQUENT_INTENSE_SEXUAL_CONTENT_NUDITY',
    CannotSellInfrequentMildAlcoholTobaccoDrugs: 'CANNOT_SELL_INFREQUENT_MILD_ALCOHOL_TOBACCO_DRUGS',
    CannotSellInfrequentMildSexualContentNudity: 'CANNOT_SELL_INFREQUENT_MILD_SEXUAL_CONTENT_NUDITY',
    CannotSellAdultOnly: 'CANNOT_SELL_ADULT_ONLY',
    CannotSellFrequentIntense: 'CANNOT_SELL_FREQUENT_INTENSE',
    CannotSellFrequentIntenseWithoutGrac: 'CANNOT_SELL_FREQUENT_INTENSE_WITHOUT_GRAC',
    CannotSellGamblingContests: 'CANNOT_SELL_GAMBLING_CONTESTS',
    CannotSellGambling: 'CANNOT_SELL_GAMBLING',
    CannotSellContests: 'CANNOT_SELL_CONTESTS',
    CannotSell: 'CANNOT_SELL'
} as const;
export type TerritoryAvailabilityAttributesContentStatusesEnum = typeof TerritoryAvailabilityAttributesContentStatusesEnum[keyof typeof TerritoryAvailabilityAttributesContentStatusesEnum];


/**
 * Check if a given object implements the TerritoryAvailabilityAttributes interface.
 */
export function instanceOfTerritoryAvailabilityAttributes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TerritoryAvailabilityAttributesFromJSON(json: any): TerritoryAvailabilityAttributes {
    return TerritoryAvailabilityAttributesFromJSONTyped(json, false);
}

export function TerritoryAvailabilityAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): TerritoryAvailabilityAttributes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'available': !exists(json, 'available') ? undefined : json['available'],
        'releaseDate': !exists(json, 'releaseDate') ? undefined : (new Date(json['releaseDate'])),
        'preOrderEnabled': !exists(json, 'preOrderEnabled') ? undefined : json['preOrderEnabled'],
        'preOrderPublishDate': !exists(json, 'preOrderPublishDate') ? undefined : (new Date(json['preOrderPublishDate'])),
        'contentStatuses': !exists(json, 'contentStatuses') ? undefined : json['contentStatuses'],
    };
}

export function TerritoryAvailabilityAttributesToJSON(value?: TerritoryAvailabilityAttributes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'available': value.available,
        'releaseDate': value.releaseDate === undefined ? undefined : (value.releaseDate.toISOString().substr(0,10)),
        'preOrderEnabled': value.preOrderEnabled,
        'preOrderPublishDate': value.preOrderPublishDate === undefined ? undefined : (value.preOrderPublishDate.toISOString().substr(0,10)),
        'contentStatuses': value.contentStatuses,
    };
}

