/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserRole } from './UserRole';
import {
    UserRoleFromJSON,
    UserRoleFromJSONTyped,
    UserRoleToJSON,
} from './UserRole';

/**
 * 
 * @export
 * @interface UserInvitationAttributes
 */
export interface UserInvitationAttributes {
    /**
     * 
     * @type {string}
     * @memberof UserInvitationAttributes
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInvitationAttributes
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInvitationAttributes
     */
    lastName?: string;
    /**
     * 
     * @type {Date}
     * @memberof UserInvitationAttributes
     */
    expirationDate?: Date;
    /**
     * 
     * @type {Array<UserRole>}
     * @memberof UserInvitationAttributes
     */
    roles?: Array<UserRole>;
    /**
     * 
     * @type {boolean}
     * @memberof UserInvitationAttributes
     */
    allAppsVisible?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserInvitationAttributes
     */
    provisioningAllowed?: boolean;
}

/**
 * Check if a given object implements the UserInvitationAttributes interface.
 */
export function instanceOfUserInvitationAttributes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserInvitationAttributesFromJSON(json: any): UserInvitationAttributes {
    return UserInvitationAttributesFromJSONTyped(json, false);
}

export function UserInvitationAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInvitationAttributes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': !exists(json, 'email') ? undefined : json['email'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'expirationDate': !exists(json, 'expirationDate') ? undefined : (new Date(json['expirationDate'])),
        'roles': !exists(json, 'roles') ? undefined : ((json['roles'] as Array<any>).map(UserRoleFromJSON)),
        'allAppsVisible': !exists(json, 'allAppsVisible') ? undefined : json['allAppsVisible'],
        'provisioningAllowed': !exists(json, 'provisioningAllowed') ? undefined : json['provisioningAllowed'],
    };
}

export function UserInvitationAttributesToJSON(value?: UserInvitationAttributes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'expirationDate': value.expirationDate === undefined ? undefined : (value.expirationDate.toISOString()),
        'roles': value.roles === undefined ? undefined : ((value.roles as Array<any>).map(UserRoleToJSON)),
        'allAppsVisible': value.allAppsVisible,
        'provisioningAllowed': value.provisioningAllowed,
    };
}

