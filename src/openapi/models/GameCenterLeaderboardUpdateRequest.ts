/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GameCenterLeaderboardUpdateRequestData } from './GameCenterLeaderboardUpdateRequestData';
import {
    GameCenterLeaderboardUpdateRequestDataFromJSON,
    GameCenterLeaderboardUpdateRequestDataFromJSONTyped,
    GameCenterLeaderboardUpdateRequestDataToJSON,
} from './GameCenterLeaderboardUpdateRequestData';

/**
 * 
 * @export
 * @interface GameCenterLeaderboardUpdateRequest
 */
export interface GameCenterLeaderboardUpdateRequest {
    /**
     * 
     * @type {GameCenterLeaderboardUpdateRequestData}
     * @memberof GameCenterLeaderboardUpdateRequest
     */
    data: GameCenterLeaderboardUpdateRequestData;
}

/**
 * Check if a given object implements the GameCenterLeaderboardUpdateRequest interface.
 */
export function instanceOfGameCenterLeaderboardUpdateRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function GameCenterLeaderboardUpdateRequestFromJSON(json: any): GameCenterLeaderboardUpdateRequest {
    return GameCenterLeaderboardUpdateRequestFromJSONTyped(json, false);
}

export function GameCenterLeaderboardUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterLeaderboardUpdateRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': GameCenterLeaderboardUpdateRequestDataFromJSON(json['data']),
    };
}

export function GameCenterLeaderboardUpdateRequestToJSON(value?: GameCenterLeaderboardUpdateRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': GameCenterLeaderboardUpdateRequestDataToJSON(value.data),
    };
}

