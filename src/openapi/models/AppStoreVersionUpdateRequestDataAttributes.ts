/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AppStoreVersionUpdateRequestDataAttributes
 */
export interface AppStoreVersionUpdateRequestDataAttributes {
    /**
     * 
     * @type {string}
     * @memberof AppStoreVersionUpdateRequestDataAttributes
     */
    versionString?: string;
    /**
     * 
     * @type {string}
     * @memberof AppStoreVersionUpdateRequestDataAttributes
     */
    copyright?: string;
    /**
     * 
     * @type {string}
     * @memberof AppStoreVersionUpdateRequestDataAttributes
     */
    reviewType?: AppStoreVersionUpdateRequestDataAttributesReviewTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof AppStoreVersionUpdateRequestDataAttributes
     */
    releaseType?: AppStoreVersionUpdateRequestDataAttributesReleaseTypeEnum;
    /**
     * 
     * @type {Date}
     * @memberof AppStoreVersionUpdateRequestDataAttributes
     */
    earliestReleaseDate?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof AppStoreVersionUpdateRequestDataAttributes
     */
    downloadable?: boolean;
}


/**
 * @export
 */
export const AppStoreVersionUpdateRequestDataAttributesReviewTypeEnum = {
    AppStore: 'APP_STORE',
    Notarization: 'NOTARIZATION'
} as const;
export type AppStoreVersionUpdateRequestDataAttributesReviewTypeEnum = typeof AppStoreVersionUpdateRequestDataAttributesReviewTypeEnum[keyof typeof AppStoreVersionUpdateRequestDataAttributesReviewTypeEnum];

/**
 * @export
 */
export const AppStoreVersionUpdateRequestDataAttributesReleaseTypeEnum = {
    Manual: 'MANUAL',
    AfterApproval: 'AFTER_APPROVAL',
    Scheduled: 'SCHEDULED'
} as const;
export type AppStoreVersionUpdateRequestDataAttributesReleaseTypeEnum = typeof AppStoreVersionUpdateRequestDataAttributesReleaseTypeEnum[keyof typeof AppStoreVersionUpdateRequestDataAttributesReleaseTypeEnum];


/**
 * Check if a given object implements the AppStoreVersionUpdateRequestDataAttributes interface.
 */
export function instanceOfAppStoreVersionUpdateRequestDataAttributes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AppStoreVersionUpdateRequestDataAttributesFromJSON(json: any): AppStoreVersionUpdateRequestDataAttributes {
    return AppStoreVersionUpdateRequestDataAttributesFromJSONTyped(json, false);
}

export function AppStoreVersionUpdateRequestDataAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppStoreVersionUpdateRequestDataAttributes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'versionString': !exists(json, 'versionString') ? undefined : json['versionString'],
        'copyright': !exists(json, 'copyright') ? undefined : json['copyright'],
        'reviewType': !exists(json, 'reviewType') ? undefined : json['reviewType'],
        'releaseType': !exists(json, 'releaseType') ? undefined : json['releaseType'],
        'earliestReleaseDate': !exists(json, 'earliestReleaseDate') ? undefined : (new Date(json['earliestReleaseDate'])),
        'downloadable': !exists(json, 'downloadable') ? undefined : json['downloadable'],
    };
}

export function AppStoreVersionUpdateRequestDataAttributesToJSON(value?: AppStoreVersionUpdateRequestDataAttributes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'versionString': value.versionString,
        'copyright': value.copyright,
        'reviewType': value.reviewType,
        'releaseType': value.releaseType,
        'earliestReleaseDate': value.earliestReleaseDate === undefined ? undefined : (value.earliestReleaseDate.toISOString()),
        'downloadable': value.downloadable,
    };
}

