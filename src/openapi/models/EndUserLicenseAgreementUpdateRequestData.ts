/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BetaLicenseAgreementAttributes } from './BetaLicenseAgreementAttributes';
import {
    BetaLicenseAgreementAttributesFromJSON,
    BetaLicenseAgreementAttributesFromJSONTyped,
    BetaLicenseAgreementAttributesToJSON,
} from './BetaLicenseAgreementAttributes';
import type { EndUserLicenseAgreementUpdateRequestDataRelationships } from './EndUserLicenseAgreementUpdateRequestDataRelationships';
import {
    EndUserLicenseAgreementUpdateRequestDataRelationshipsFromJSON,
    EndUserLicenseAgreementUpdateRequestDataRelationshipsFromJSONTyped,
    EndUserLicenseAgreementUpdateRequestDataRelationshipsToJSON,
} from './EndUserLicenseAgreementUpdateRequestDataRelationships';

/**
 * 
 * @export
 * @interface EndUserLicenseAgreementUpdateRequestData
 */
export interface EndUserLicenseAgreementUpdateRequestData {
    /**
     * 
     * @type {string}
     * @memberof EndUserLicenseAgreementUpdateRequestData
     */
    type: EndUserLicenseAgreementUpdateRequestDataTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EndUserLicenseAgreementUpdateRequestData
     */
    id: string;
    /**
     * 
     * @type {BetaLicenseAgreementAttributes}
     * @memberof EndUserLicenseAgreementUpdateRequestData
     */
    attributes?: BetaLicenseAgreementAttributes;
    /**
     * 
     * @type {EndUserLicenseAgreementUpdateRequestDataRelationships}
     * @memberof EndUserLicenseAgreementUpdateRequestData
     */
    relationships?: EndUserLicenseAgreementUpdateRequestDataRelationships;
}


/**
 * @export
 */
export const EndUserLicenseAgreementUpdateRequestDataTypeEnum = {
    EndUserLicenseAgreements: 'endUserLicenseAgreements'
} as const;
export type EndUserLicenseAgreementUpdateRequestDataTypeEnum = typeof EndUserLicenseAgreementUpdateRequestDataTypeEnum[keyof typeof EndUserLicenseAgreementUpdateRequestDataTypeEnum];


/**
 * Check if a given object implements the EndUserLicenseAgreementUpdateRequestData interface.
 */
export function instanceOfEndUserLicenseAgreementUpdateRequestData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function EndUserLicenseAgreementUpdateRequestDataFromJSON(json: any): EndUserLicenseAgreementUpdateRequestData {
    return EndUserLicenseAgreementUpdateRequestDataFromJSONTyped(json, false);
}

export function EndUserLicenseAgreementUpdateRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EndUserLicenseAgreementUpdateRequestData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': !exists(json, 'attributes') ? undefined : BetaLicenseAgreementAttributesFromJSON(json['attributes']),
        'relationships': !exists(json, 'relationships') ? undefined : EndUserLicenseAgreementUpdateRequestDataRelationshipsFromJSON(json['relationships']),
    };
}

export function EndUserLicenseAgreementUpdateRequestDataToJSON(value?: EndUserLicenseAgreementUpdateRequestData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'id': value.id,
        'attributes': BetaLicenseAgreementAttributesToJSON(value.attributes),
        'relationships': EndUserLicenseAgreementUpdateRequestDataRelationshipsToJSON(value.relationships),
    };
}

