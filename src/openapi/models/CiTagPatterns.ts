/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CiBranchPatternsPatternsInner } from './CiBranchPatternsPatternsInner';
import {
    CiBranchPatternsPatternsInnerFromJSON,
    CiBranchPatternsPatternsInnerFromJSONTyped,
    CiBranchPatternsPatternsInnerToJSON,
} from './CiBranchPatternsPatternsInner';

/**
 * 
 * @export
 * @interface CiTagPatterns
 */
export interface CiTagPatterns {
    /**
     * 
     * @type {boolean}
     * @memberof CiTagPatterns
     */
    isAllMatch?: boolean;
    /**
     * 
     * @type {Array<CiBranchPatternsPatternsInner>}
     * @memberof CiTagPatterns
     */
    patterns?: Array<CiBranchPatternsPatternsInner>;
}

/**
 * Check if a given object implements the CiTagPatterns interface.
 */
export function instanceOfCiTagPatterns(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CiTagPatternsFromJSON(json: any): CiTagPatterns {
    return CiTagPatternsFromJSONTyped(json, false);
}

export function CiTagPatternsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CiTagPatterns {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isAllMatch': !exists(json, 'isAllMatch') ? undefined : json['isAllMatch'],
        'patterns': !exists(json, 'patterns') ? undefined : ((json['patterns'] as Array<any>).map(CiBranchPatternsPatternsInnerFromJSON)),
    };
}

export function CiTagPatternsToJSON(value?: CiTagPatterns | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'isAllMatch': value.isAllMatch,
        'patterns': value.patterns === undefined ? undefined : ((value.patterns as Array<any>).map(CiBranchPatternsPatternsInnerToJSON)),
    };
}

