/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SubscriptionGroupRelationshipsSubscriptionGroupLocalizations } from './SubscriptionGroupRelationshipsSubscriptionGroupLocalizations';
import {
    SubscriptionGroupRelationshipsSubscriptionGroupLocalizationsFromJSON,
    SubscriptionGroupRelationshipsSubscriptionGroupLocalizationsFromJSONTyped,
    SubscriptionGroupRelationshipsSubscriptionGroupLocalizationsToJSON,
} from './SubscriptionGroupRelationshipsSubscriptionGroupLocalizations';
import type { SubscriptionGroupRelationshipsSubscriptions } from './SubscriptionGroupRelationshipsSubscriptions';
import {
    SubscriptionGroupRelationshipsSubscriptionsFromJSON,
    SubscriptionGroupRelationshipsSubscriptionsFromJSONTyped,
    SubscriptionGroupRelationshipsSubscriptionsToJSON,
} from './SubscriptionGroupRelationshipsSubscriptions';

/**
 * 
 * @export
 * @interface SubscriptionGroupRelationships
 */
export interface SubscriptionGroupRelationships {
    /**
     * 
     * @type {SubscriptionGroupRelationshipsSubscriptions}
     * @memberof SubscriptionGroupRelationships
     */
    subscriptions?: SubscriptionGroupRelationshipsSubscriptions;
    /**
     * 
     * @type {SubscriptionGroupRelationshipsSubscriptionGroupLocalizations}
     * @memberof SubscriptionGroupRelationships
     */
    subscriptionGroupLocalizations?: SubscriptionGroupRelationshipsSubscriptionGroupLocalizations;
}

/**
 * Check if a given object implements the SubscriptionGroupRelationships interface.
 */
export function instanceOfSubscriptionGroupRelationships(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SubscriptionGroupRelationshipsFromJSON(json: any): SubscriptionGroupRelationships {
    return SubscriptionGroupRelationshipsFromJSONTyped(json, false);
}

export function SubscriptionGroupRelationshipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionGroupRelationships {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'subscriptions': !exists(json, 'subscriptions') ? undefined : SubscriptionGroupRelationshipsSubscriptionsFromJSON(json['subscriptions']),
        'subscriptionGroupLocalizations': !exists(json, 'subscriptionGroupLocalizations') ? undefined : SubscriptionGroupRelationshipsSubscriptionGroupLocalizationsFromJSON(json['subscriptionGroupLocalizations']),
    };
}

export function SubscriptionGroupRelationshipsToJSON(value?: SubscriptionGroupRelationships | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'subscriptions': SubscriptionGroupRelationshipsSubscriptionsToJSON(value.subscriptions),
        'subscriptionGroupLocalizations': SubscriptionGroupRelationshipsSubscriptionGroupLocalizationsToJSON(value.subscriptionGroupLocalizations),
    };
}

