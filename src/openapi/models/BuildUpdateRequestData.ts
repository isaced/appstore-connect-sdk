/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BuildUpdateRequestDataAttributes } from './BuildUpdateRequestDataAttributes';
import {
    BuildUpdateRequestDataAttributesFromJSON,
    BuildUpdateRequestDataAttributesFromJSONTyped,
    BuildUpdateRequestDataAttributesToJSON,
} from './BuildUpdateRequestDataAttributes';
import type { BuildUpdateRequestDataRelationships } from './BuildUpdateRequestDataRelationships';
import {
    BuildUpdateRequestDataRelationshipsFromJSON,
    BuildUpdateRequestDataRelationshipsFromJSONTyped,
    BuildUpdateRequestDataRelationshipsToJSON,
} from './BuildUpdateRequestDataRelationships';

/**
 * 
 * @export
 * @interface BuildUpdateRequestData
 */
export interface BuildUpdateRequestData {
    /**
     * 
     * @type {string}
     * @memberof BuildUpdateRequestData
     */
    type: BuildUpdateRequestDataTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof BuildUpdateRequestData
     */
    id: string;
    /**
     * 
     * @type {BuildUpdateRequestDataAttributes}
     * @memberof BuildUpdateRequestData
     */
    attributes?: BuildUpdateRequestDataAttributes;
    /**
     * 
     * @type {BuildUpdateRequestDataRelationships}
     * @memberof BuildUpdateRequestData
     */
    relationships?: BuildUpdateRequestDataRelationships;
}


/**
 * @export
 */
export const BuildUpdateRequestDataTypeEnum = {
    Builds: 'builds'
} as const;
export type BuildUpdateRequestDataTypeEnum = typeof BuildUpdateRequestDataTypeEnum[keyof typeof BuildUpdateRequestDataTypeEnum];


/**
 * Check if a given object implements the BuildUpdateRequestData interface.
 */
export function instanceOfBuildUpdateRequestData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function BuildUpdateRequestDataFromJSON(json: any): BuildUpdateRequestData {
    return BuildUpdateRequestDataFromJSONTyped(json, false);
}

export function BuildUpdateRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): BuildUpdateRequestData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': !exists(json, 'attributes') ? undefined : BuildUpdateRequestDataAttributesFromJSON(json['attributes']),
        'relationships': !exists(json, 'relationships') ? undefined : BuildUpdateRequestDataRelationshipsFromJSON(json['relationships']),
    };
}

export function BuildUpdateRequestDataToJSON(value?: BuildUpdateRequestData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'id': value.id,
        'attributes': BuildUpdateRequestDataAttributesToJSON(value.attributes),
        'relationships': BuildUpdateRequestDataRelationshipsToJSON(value.relationships),
    };
}

