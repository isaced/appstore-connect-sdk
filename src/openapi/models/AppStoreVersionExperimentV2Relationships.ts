/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppAvailabilityRelationshipsApp } from './AppAvailabilityRelationshipsApp';
import {
    AppAvailabilityRelationshipsAppFromJSON,
    AppAvailabilityRelationshipsAppFromJSONTyped,
    AppAvailabilityRelationshipsAppToJSON,
} from './AppAvailabilityRelationshipsApp';
import type { AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion } from './AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion';
import {
    AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersionFromJSON,
    AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersionFromJSONTyped,
    AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersionToJSON,
} from './AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion';
import type { AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments } from './AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments';
import {
    AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatmentsFromJSON,
    AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatmentsFromJSONTyped,
    AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatmentsToJSON,
} from './AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments';
import type { AppStoreVersionExperimentV2RelationshipsControlVersions } from './AppStoreVersionExperimentV2RelationshipsControlVersions';
import {
    AppStoreVersionExperimentV2RelationshipsControlVersionsFromJSON,
    AppStoreVersionExperimentV2RelationshipsControlVersionsFromJSONTyped,
    AppStoreVersionExperimentV2RelationshipsControlVersionsToJSON,
} from './AppStoreVersionExperimentV2RelationshipsControlVersions';

/**
 * 
 * @export
 * @interface AppStoreVersionExperimentV2Relationships
 */
export interface AppStoreVersionExperimentV2Relationships {
    /**
     * 
     * @type {AppAvailabilityRelationshipsApp}
     * @memberof AppStoreVersionExperimentV2Relationships
     */
    app?: AppAvailabilityRelationshipsApp;
    /**
     * 
     * @type {AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion}
     * @memberof AppStoreVersionExperimentV2Relationships
     */
    latestControlVersion?: AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion;
    /**
     * 
     * @type {AppStoreVersionExperimentV2RelationshipsControlVersions}
     * @memberof AppStoreVersionExperimentV2Relationships
     */
    controlVersions?: AppStoreVersionExperimentV2RelationshipsControlVersions;
    /**
     * 
     * @type {AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments}
     * @memberof AppStoreVersionExperimentV2Relationships
     */
    appStoreVersionExperimentTreatments?: AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments;
}

/**
 * Check if a given object implements the AppStoreVersionExperimentV2Relationships interface.
 */
export function instanceOfAppStoreVersionExperimentV2Relationships(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AppStoreVersionExperimentV2RelationshipsFromJSON(json: any): AppStoreVersionExperimentV2Relationships {
    return AppStoreVersionExperimentV2RelationshipsFromJSONTyped(json, false);
}

export function AppStoreVersionExperimentV2RelationshipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppStoreVersionExperimentV2Relationships {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'app': !exists(json, 'app') ? undefined : AppAvailabilityRelationshipsAppFromJSON(json['app']),
        'latestControlVersion': !exists(json, 'latestControlVersion') ? undefined : AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersionFromJSON(json['latestControlVersion']),
        'controlVersions': !exists(json, 'controlVersions') ? undefined : AppStoreVersionExperimentV2RelationshipsControlVersionsFromJSON(json['controlVersions']),
        'appStoreVersionExperimentTreatments': !exists(json, 'appStoreVersionExperimentTreatments') ? undefined : AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatmentsFromJSON(json['appStoreVersionExperimentTreatments']),
    };
}

export function AppStoreVersionExperimentV2RelationshipsToJSON(value?: AppStoreVersionExperimentV2Relationships | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'app': AppAvailabilityRelationshipsAppToJSON(value.app),
        'latestControlVersion': AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersionToJSON(value.latestControlVersion),
        'controlVersions': AppStoreVersionExperimentV2RelationshipsControlVersionsToJSON(value.controlVersions),
        'appStoreVersionExperimentTreatments': AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatmentsToJSON(value.appStoreVersionExperimentTreatments),
    };
}

