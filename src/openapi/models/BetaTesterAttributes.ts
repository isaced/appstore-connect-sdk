/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BetaInviteType } from './BetaInviteType';
import {
    BetaInviteTypeFromJSON,
    BetaInviteTypeFromJSONTyped,
    BetaInviteTypeToJSON,
} from './BetaInviteType';
import type { BetaTesterState } from './BetaTesterState';
import {
    BetaTesterStateFromJSON,
    BetaTesterStateFromJSONTyped,
    BetaTesterStateToJSON,
} from './BetaTesterState';

/**
 * 
 * @export
 * @interface BetaTesterAttributes
 */
export interface BetaTesterAttributes {
    /**
     * 
     * @type {string}
     * @memberof BetaTesterAttributes
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof BetaTesterAttributes
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof BetaTesterAttributes
     */
    email?: string;
    /**
     * 
     * @type {BetaInviteType}
     * @memberof BetaTesterAttributes
     */
    inviteType?: BetaInviteType;
    /**
     * 
     * @type {BetaTesterState}
     * @memberof BetaTesterAttributes
     */
    state?: BetaTesterState;
}

/**
 * Check if a given object implements the BetaTesterAttributes interface.
 */
export function instanceOfBetaTesterAttributes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BetaTesterAttributesFromJSON(json: any): BetaTesterAttributes {
    return BetaTesterAttributesFromJSONTyped(json, false);
}

export function BetaTesterAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): BetaTesterAttributes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'inviteType': !exists(json, 'inviteType') ? undefined : BetaInviteTypeFromJSON(json['inviteType']),
        'state': !exists(json, 'state') ? undefined : BetaTesterStateFromJSON(json['state']),
    };
}

export function BetaTesterAttributesToJSON(value?: BetaTesterAttributes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'firstName': value.firstName,
        'lastName': value.lastName,
        'email': value.email,
        'inviteType': BetaInviteTypeToJSON(value.inviteType),
        'state': BetaTesterStateToJSON(value.state),
    };
}

