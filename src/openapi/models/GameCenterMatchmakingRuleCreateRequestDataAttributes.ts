/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GameCenterMatchmakingRuleCreateRequestDataAttributes
 */
export interface GameCenterMatchmakingRuleCreateRequestDataAttributes {
    /**
     * 
     * @type {string}
     * @memberof GameCenterMatchmakingRuleCreateRequestDataAttributes
     */
    referenceName: string;
    /**
     * 
     * @type {string}
     * @memberof GameCenterMatchmakingRuleCreateRequestDataAttributes
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof GameCenterMatchmakingRuleCreateRequestDataAttributes
     */
    type: GameCenterMatchmakingRuleCreateRequestDataAttributesTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GameCenterMatchmakingRuleCreateRequestDataAttributes
     */
    expression: string;
    /**
     * 
     * @type {number}
     * @memberof GameCenterMatchmakingRuleCreateRequestDataAttributes
     */
    weight?: number;
}


/**
 * @export
 */
export const GameCenterMatchmakingRuleCreateRequestDataAttributesTypeEnum = {
    Compatible: 'COMPATIBLE',
    Distance: 'DISTANCE',
    Match: 'MATCH',
    Team: 'TEAM'
} as const;
export type GameCenterMatchmakingRuleCreateRequestDataAttributesTypeEnum = typeof GameCenterMatchmakingRuleCreateRequestDataAttributesTypeEnum[keyof typeof GameCenterMatchmakingRuleCreateRequestDataAttributesTypeEnum];


/**
 * Check if a given object implements the GameCenterMatchmakingRuleCreateRequestDataAttributes interface.
 */
export function instanceOfGameCenterMatchmakingRuleCreateRequestDataAttributes(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "referenceName" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "expression" in value;

    return isInstance;
}

export function GameCenterMatchmakingRuleCreateRequestDataAttributesFromJSON(json: any): GameCenterMatchmakingRuleCreateRequestDataAttributes {
    return GameCenterMatchmakingRuleCreateRequestDataAttributesFromJSONTyped(json, false);
}

export function GameCenterMatchmakingRuleCreateRequestDataAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterMatchmakingRuleCreateRequestDataAttributes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'referenceName': json['referenceName'],
        'description': json['description'],
        'type': json['type'],
        'expression': json['expression'],
        'weight': !exists(json, 'weight') ? undefined : json['weight'],
    };
}

export function GameCenterMatchmakingRuleCreateRequestDataAttributesToJSON(value?: GameCenterMatchmakingRuleCreateRequestDataAttributes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'referenceName': value.referenceName,
        'description': value.description,
        'type': value.type,
        'expression': value.expression,
        'weight': value.weight,
    };
}

