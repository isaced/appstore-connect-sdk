/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppInfo } from './AppInfo';
import {
    AppInfoFromJSON,
    AppInfoFromJSONTyped,
    AppInfoToJSON,
} from './AppInfo';
import type { AppInfoLocalization } from './AppInfoLocalization';
import {
    AppInfoLocalizationFromJSON,
    AppInfoLocalizationFromJSONTyped,
    AppInfoLocalizationToJSON,
} from './AppInfoLocalization';
import type { DocumentLinks } from './DocumentLinks';
import {
    DocumentLinksFromJSON,
    DocumentLinksFromJSONTyped,
    DocumentLinksToJSON,
} from './DocumentLinks';

/**
 * 
 * @export
 * @interface AppInfoLocalizationResponse
 */
export interface AppInfoLocalizationResponse {
    /**
     * 
     * @type {AppInfoLocalization}
     * @memberof AppInfoLocalizationResponse
     */
    data: AppInfoLocalization;
    /**
     * 
     * @type {Array<AppInfo>}
     * @memberof AppInfoLocalizationResponse
     */
    included?: Array<AppInfo>;
    /**
     * 
     * @type {DocumentLinks}
     * @memberof AppInfoLocalizationResponse
     */
    links: DocumentLinks;
}

/**
 * Check if a given object implements the AppInfoLocalizationResponse interface.
 */
export function instanceOfAppInfoLocalizationResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "links" in value;

    return isInstance;
}

export function AppInfoLocalizationResponseFromJSON(json: any): AppInfoLocalizationResponse {
    return AppInfoLocalizationResponseFromJSONTyped(json, false);
}

export function AppInfoLocalizationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppInfoLocalizationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': AppInfoLocalizationFromJSON(json['data']),
        'included': !exists(json, 'included') ? undefined : ((json['included'] as Array<any>).map(AppInfoFromJSON)),
        'links': DocumentLinksFromJSON(json['links']),
    };
}

export function AppInfoLocalizationResponseToJSON(value?: AppInfoLocalizationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': AppInfoLocalizationToJSON(value.data),
        'included': value.included === undefined ? undefined : ((value.included as Array<any>).map(AppInfoToJSON)),
        'links': DocumentLinksToJSON(value.links),
    };
}

