/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AlternativeDistributionPackageRelationshipsVersions } from './AlternativeDistributionPackageRelationshipsVersions';
import {
    AlternativeDistributionPackageRelationshipsVersionsFromJSON,
    AlternativeDistributionPackageRelationshipsVersionsFromJSONTyped,
    AlternativeDistributionPackageRelationshipsVersionsToJSON,
} from './AlternativeDistributionPackageRelationshipsVersions';

/**
 * 
 * @export
 * @interface AlternativeDistributionPackageRelationships
 */
export interface AlternativeDistributionPackageRelationships {
    /**
     * 
     * @type {AlternativeDistributionPackageRelationshipsVersions}
     * @memberof AlternativeDistributionPackageRelationships
     */
    versions?: AlternativeDistributionPackageRelationshipsVersions;
}

/**
 * Check if a given object implements the AlternativeDistributionPackageRelationships interface.
 */
export function instanceOfAlternativeDistributionPackageRelationships(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AlternativeDistributionPackageRelationshipsFromJSON(json: any): AlternativeDistributionPackageRelationships {
    return AlternativeDistributionPackageRelationshipsFromJSONTyped(json, false);
}

export function AlternativeDistributionPackageRelationshipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlternativeDistributionPackageRelationships {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'versions': !exists(json, 'versions') ? undefined : AlternativeDistributionPackageRelationshipsVersionsFromJSON(json['versions']),
    };
}

export function AlternativeDistributionPackageRelationshipsToJSON(value?: AlternativeDistributionPackageRelationships | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'versions': AlternativeDistributionPackageRelationshipsVersionsToJSON(value.versions),
    };
}

