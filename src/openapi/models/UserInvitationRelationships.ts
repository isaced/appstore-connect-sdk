/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BetaTesterRelationshipsApps } from './BetaTesterRelationshipsApps';
import {
    BetaTesterRelationshipsAppsFromJSON,
    BetaTesterRelationshipsAppsFromJSONTyped,
    BetaTesterRelationshipsAppsToJSON,
} from './BetaTesterRelationshipsApps';

/**
 * 
 * @export
 * @interface UserInvitationRelationships
 */
export interface UserInvitationRelationships {
    /**
     * 
     * @type {BetaTesterRelationshipsApps}
     * @memberof UserInvitationRelationships
     */
    visibleApps?: BetaTesterRelationshipsApps;
}

/**
 * Check if a given object implements the UserInvitationRelationships interface.
 */
export function instanceOfUserInvitationRelationships(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserInvitationRelationshipsFromJSON(json: any): UserInvitationRelationships {
    return UserInvitationRelationshipsFromJSONTyped(json, false);
}

export function UserInvitationRelationshipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInvitationRelationships {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'visibleApps': !exists(json, 'visibleApps') ? undefined : BetaTesterRelationshipsAppsFromJSON(json['visibleApps']),
    };
}

export function UserInvitationRelationshipsToJSON(value?: UserInvitationRelationships | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'visibleApps': BetaTesterRelationshipsAppsToJSON(value.visibleApps),
    };
}

