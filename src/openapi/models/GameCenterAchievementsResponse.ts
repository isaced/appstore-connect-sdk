/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GameCenterAchievement } from './GameCenterAchievement';
import {
    GameCenterAchievementFromJSON,
    GameCenterAchievementFromJSONTyped,
    GameCenterAchievementToJSON,
} from './GameCenterAchievement';
import type { GameCenterAchievementsResponseIncludedInner } from './GameCenterAchievementsResponseIncludedInner';
import {
    GameCenterAchievementsResponseIncludedInnerFromJSON,
    GameCenterAchievementsResponseIncludedInnerFromJSONTyped,
    GameCenterAchievementsResponseIncludedInnerToJSON,
} from './GameCenterAchievementsResponseIncludedInner';
import type { PagedDocumentLinks } from './PagedDocumentLinks';
import {
    PagedDocumentLinksFromJSON,
    PagedDocumentLinksFromJSONTyped,
    PagedDocumentLinksToJSON,
} from './PagedDocumentLinks';
import type { PagingInformation } from './PagingInformation';
import {
    PagingInformationFromJSON,
    PagingInformationFromJSONTyped,
    PagingInformationToJSON,
} from './PagingInformation';

/**
 * 
 * @export
 * @interface GameCenterAchievementsResponse
 */
export interface GameCenterAchievementsResponse {
    /**
     * 
     * @type {Array<GameCenterAchievement>}
     * @memberof GameCenterAchievementsResponse
     */
    data: Array<GameCenterAchievement>;
    /**
     * 
     * @type {Array<GameCenterAchievementsResponseIncludedInner>}
     * @memberof GameCenterAchievementsResponse
     */
    included?: Array<GameCenterAchievementsResponseIncludedInner>;
    /**
     * 
     * @type {PagedDocumentLinks}
     * @memberof GameCenterAchievementsResponse
     */
    links: PagedDocumentLinks;
    /**
     * 
     * @type {PagingInformation}
     * @memberof GameCenterAchievementsResponse
     */
    meta?: PagingInformation;
}

/**
 * Check if a given object implements the GameCenterAchievementsResponse interface.
 */
export function instanceOfGameCenterAchievementsResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "links" in value;

    return isInstance;
}

export function GameCenterAchievementsResponseFromJSON(json: any): GameCenterAchievementsResponse {
    return GameCenterAchievementsResponseFromJSONTyped(json, false);
}

export function GameCenterAchievementsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterAchievementsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(GameCenterAchievementFromJSON)),
        'included': !exists(json, 'included') ? undefined : ((json['included'] as Array<any>).map(GameCenterAchievementsResponseIncludedInnerFromJSON)),
        'links': PagedDocumentLinksFromJSON(json['links']),
        'meta': !exists(json, 'meta') ? undefined : PagingInformationFromJSON(json['meta']),
    };
}

export function GameCenterAchievementsResponseToJSON(value?: GameCenterAchievementsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(GameCenterAchievementToJSON)),
        'included': value.included === undefined ? undefined : ((value.included as Array<any>).map(GameCenterAchievementsResponseIncludedInnerToJSON)),
        'links': PagedDocumentLinksToJSON(value.links),
        'meta': PagingInformationToJSON(value.meta),
    };
}

