/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SubscriptionIntroductoryOfferUpdateRequestDataAttributes } from './SubscriptionIntroductoryOfferUpdateRequestDataAttributes';
import {
    SubscriptionIntroductoryOfferUpdateRequestDataAttributesFromJSON,
    SubscriptionIntroductoryOfferUpdateRequestDataAttributesFromJSONTyped,
    SubscriptionIntroductoryOfferUpdateRequestDataAttributesToJSON,
} from './SubscriptionIntroductoryOfferUpdateRequestDataAttributes';

/**
 * 
 * @export
 * @interface SubscriptionIntroductoryOfferUpdateRequestData
 */
export interface SubscriptionIntroductoryOfferUpdateRequestData {
    /**
     * 
     * @type {string}
     * @memberof SubscriptionIntroductoryOfferUpdateRequestData
     */
    type: SubscriptionIntroductoryOfferUpdateRequestDataTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionIntroductoryOfferUpdateRequestData
     */
    id: string;
    /**
     * 
     * @type {SubscriptionIntroductoryOfferUpdateRequestDataAttributes}
     * @memberof SubscriptionIntroductoryOfferUpdateRequestData
     */
    attributes?: SubscriptionIntroductoryOfferUpdateRequestDataAttributes;
}


/**
 * @export
 */
export const SubscriptionIntroductoryOfferUpdateRequestDataTypeEnum = {
    SubscriptionIntroductoryOffers: 'subscriptionIntroductoryOffers'
} as const;
export type SubscriptionIntroductoryOfferUpdateRequestDataTypeEnum = typeof SubscriptionIntroductoryOfferUpdateRequestDataTypeEnum[keyof typeof SubscriptionIntroductoryOfferUpdateRequestDataTypeEnum];


/**
 * Check if a given object implements the SubscriptionIntroductoryOfferUpdateRequestData interface.
 */
export function instanceOfSubscriptionIntroductoryOfferUpdateRequestData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function SubscriptionIntroductoryOfferUpdateRequestDataFromJSON(json: any): SubscriptionIntroductoryOfferUpdateRequestData {
    return SubscriptionIntroductoryOfferUpdateRequestDataFromJSONTyped(json, false);
}

export function SubscriptionIntroductoryOfferUpdateRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionIntroductoryOfferUpdateRequestData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': !exists(json, 'attributes') ? undefined : SubscriptionIntroductoryOfferUpdateRequestDataAttributesFromJSON(json['attributes']),
    };
}

export function SubscriptionIntroductoryOfferUpdateRequestDataToJSON(value?: SubscriptionIntroductoryOfferUpdateRequestData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'id': value.id,
        'attributes': SubscriptionIntroductoryOfferUpdateRequestDataAttributesToJSON(value.attributes),
    };
}

