/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BetaReviewState } from './BetaReviewState';
import {
    BetaReviewStateFromJSON,
    BetaReviewStateFromJSONTyped,
    BetaReviewStateToJSON,
} from './BetaReviewState';

/**
 * 
 * @export
 * @interface BetaAppReviewSubmissionAttributes
 */
export interface BetaAppReviewSubmissionAttributes {
    /**
     * 
     * @type {BetaReviewState}
     * @memberof BetaAppReviewSubmissionAttributes
     */
    betaReviewState?: BetaReviewState;
    /**
     * 
     * @type {Date}
     * @memberof BetaAppReviewSubmissionAttributes
     */
    submittedDate?: Date;
}

/**
 * Check if a given object implements the BetaAppReviewSubmissionAttributes interface.
 */
export function instanceOfBetaAppReviewSubmissionAttributes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BetaAppReviewSubmissionAttributesFromJSON(json: any): BetaAppReviewSubmissionAttributes {
    return BetaAppReviewSubmissionAttributesFromJSONTyped(json, false);
}

export function BetaAppReviewSubmissionAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): BetaAppReviewSubmissionAttributes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'betaReviewState': !exists(json, 'betaReviewState') ? undefined : BetaReviewStateFromJSON(json['betaReviewState']),
        'submittedDate': !exists(json, 'submittedDate') ? undefined : (new Date(json['submittedDate'])),
    };
}

export function BetaAppReviewSubmissionAttributesToJSON(value?: BetaAppReviewSubmissionAttributes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'betaReviewState': BetaReviewStateToJSON(value.betaReviewState),
        'submittedDate': value.submittedDate === undefined ? undefined : (value.submittedDate.toISOString()),
    };
}

