/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ErrorLinks } from './ErrorLinks';
import {
    ErrorLinksFromJSON,
    ErrorLinksFromJSONTyped,
    ErrorLinksToJSON,
} from './ErrorLinks';
import type { ErrorResponseErrorsInnerSource } from './ErrorResponseErrorsInnerSource';
import {
    ErrorResponseErrorsInnerSourceFromJSON,
    ErrorResponseErrorsInnerSourceFromJSONTyped,
    ErrorResponseErrorsInnerSourceToJSON,
} from './ErrorResponseErrorsInnerSource';

/**
 * 
 * @export
 * @interface ErrorResponseErrorsInner
 */
export interface ErrorResponseErrorsInner {
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseErrorsInner
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseErrorsInner
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseErrorsInner
     */
    code: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseErrorsInner
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseErrorsInner
     */
    detail: string;
    /**
     * 
     * @type {ErrorResponseErrorsInnerSource}
     * @memberof ErrorResponseErrorsInner
     */
    source?: ErrorResponseErrorsInnerSource;
    /**
     * 
     * @type {ErrorLinks}
     * @memberof ErrorResponseErrorsInner
     */
    links?: ErrorLinks;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ErrorResponseErrorsInner
     */
    meta?: { [key: string]: any; };
}

/**
 * Check if a given object implements the ErrorResponseErrorsInner interface.
 */
export function instanceOfErrorResponseErrorsInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "detail" in value;

    return isInstance;
}

export function ErrorResponseErrorsInnerFromJSON(json: any): ErrorResponseErrorsInner {
    return ErrorResponseErrorsInnerFromJSONTyped(json, false);
}

export function ErrorResponseErrorsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponseErrorsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'status': json['status'],
        'code': json['code'],
        'title': json['title'],
        'detail': json['detail'],
        'source': !exists(json, 'source') ? undefined : ErrorResponseErrorsInnerSourceFromJSON(json['source']),
        'links': !exists(json, 'links') ? undefined : ErrorLinksFromJSON(json['links']),
        'meta': !exists(json, 'meta') ? undefined : json['meta'],
    };
}

export function ErrorResponseErrorsInnerToJSON(value?: ErrorResponseErrorsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'status': value.status,
        'code': value.code,
        'title': value.title,
        'detail': value.detail,
        'source': ErrorResponseErrorsInnerSourceToJSON(value.source),
        'links': ErrorLinksToJSON(value.links),
        'meta': value.meta,
    };
}

