/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  GameCenterLeaderboardResponse,
  GameCenterLeaderboardSetMemberLocalizationCreateRequest,
  GameCenterLeaderboardSetMemberLocalizationResponse,
  GameCenterLeaderboardSetMemberLocalizationUpdateRequest,
  GameCenterLeaderboardSetMemberLocalizationsResponse,
  GameCenterLeaderboardSetResponse,
} from '../models';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    GameCenterLeaderboardResponseFromJSON,
    GameCenterLeaderboardResponseToJSON,
    GameCenterLeaderboardSetMemberLocalizationCreateRequestFromJSON,
    GameCenterLeaderboardSetMemberLocalizationCreateRequestToJSON,
    GameCenterLeaderboardSetMemberLocalizationResponseFromJSON,
    GameCenterLeaderboardSetMemberLocalizationResponseToJSON,
    GameCenterLeaderboardSetMemberLocalizationUpdateRequestFromJSON,
    GameCenterLeaderboardSetMemberLocalizationUpdateRequestToJSON,
    GameCenterLeaderboardSetMemberLocalizationsResponseFromJSON,
    GameCenterLeaderboardSetMemberLocalizationsResponseToJSON,
    GameCenterLeaderboardSetResponseFromJSON,
    GameCenterLeaderboardSetResponseToJSON,
} from '../models';

export interface GameCenterLeaderboardSetMemberLocalizationsCreateInstanceRequest {
    gameCenterLeaderboardSetMemberLocalizationCreateRequest: GameCenterLeaderboardSetMemberLocalizationCreateRequest;
}

export interface GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceRequest {
    id: string;
}

export interface GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedRequest {
    id: string;
    fieldsGameCenterLeaderboardLocalizations?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardLocalizationsEnum>;
    fieldsGameCenterLeaderboardSets?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum>;
    fieldsGameCenterGroups?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterGroupsEnum>;
    fieldsGameCenterDetails?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterDetailsEnum>;
    fieldsGameCenterLeaderboards?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardsEnum>;
    fieldsGameCenterLeaderboardReleases?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardReleasesEnum>;
    limitGameCenterLeaderboardSets?: number;
    limitLocalizations?: number;
    limitReleases?: number;
    include?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedIncludeEnum>;
}

export interface GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedRequest {
    id: string;
    fieldsGameCenterLeaderboardSetLocalizations?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetLocalizationsEnum>;
    fieldsGameCenterLeaderboardSetReleases?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetReleasesEnum>;
    fieldsGameCenterLeaderboardSets?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum>;
    fieldsGameCenterGroups?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterGroupsEnum>;
    fieldsGameCenterDetails?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterDetailsEnum>;
    fieldsGameCenterLeaderboards?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardsEnum>;
    limitLocalizations?: number;
    limitGameCenterLeaderboards?: number;
    limitReleases?: number;
    include?: Array<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedIncludeEnum>;
}

export interface GameCenterLeaderboardSetMemberLocalizationsGetCollectionRequest {
    filterGameCenterLeaderboard: Array<string>;
    filterGameCenterLeaderboardSet: Array<string>;
    fieldsGameCenterLeaderboardSetMemberLocalizations?: Array<GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardSetMemberLocalizationsEnum>;
    limit?: number;
    include?: Array<GameCenterLeaderboardSetMemberLocalizationsGetCollectionIncludeEnum>;
    fieldsGameCenterLeaderboardSets?: Array<GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardSetsEnum>;
    fieldsGameCenterLeaderboards?: Array<GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardsEnum>;
}

export interface GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceRequest {
    id: string;
    gameCenterLeaderboardSetMemberLocalizationUpdateRequest: GameCenterLeaderboardSetMemberLocalizationUpdateRequest;
}

/**
 * 
 */
export class GameCenterLeaderboardSetMemberLocalizationsApi extends runtime.BaseAPI {

    /**
     */
    async gameCenterLeaderboardSetMemberLocalizationsCreateInstanceRaw(requestParameters: GameCenterLeaderboardSetMemberLocalizationsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardSetMemberLocalizationResponse>> {
        if (requestParameters.gameCenterLeaderboardSetMemberLocalizationCreateRequest === null || requestParameters.gameCenterLeaderboardSetMemberLocalizationCreateRequest === undefined) {
            throw new runtime.RequiredError('gameCenterLeaderboardSetMemberLocalizationCreateRequest','Required parameter requestParameters.gameCenterLeaderboardSetMemberLocalizationCreateRequest was null or undefined when calling gameCenterLeaderboardSetMemberLocalizationsCreateInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/gameCenterLeaderboardSetMemberLocalizations`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GameCenterLeaderboardSetMemberLocalizationCreateRequestToJSON(requestParameters.gameCenterLeaderboardSetMemberLocalizationCreateRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GameCenterLeaderboardSetMemberLocalizationResponseFromJSON(jsonValue));
    }

    /**
     */
    async gameCenterLeaderboardSetMemberLocalizationsCreateInstance(requestParameters: GameCenterLeaderboardSetMemberLocalizationsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardSetMemberLocalizationResponse> {
        const response = await this.gameCenterLeaderboardSetMemberLocalizationsCreateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async gameCenterLeaderboardSetMemberLocalizationsDeleteInstanceRaw(requestParameters: GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling gameCenterLeaderboardSetMemberLocalizationsDeleteInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/gameCenterLeaderboardSetMemberLocalizations/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async gameCenterLeaderboardSetMemberLocalizationsDeleteInstance(requestParameters: GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.gameCenterLeaderboardSetMemberLocalizationsDeleteInstanceRaw(requestParameters, initOverrides);
    }

    /**
     */
    async gameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedRaw(requestParameters: GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling gameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelated.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsGameCenterLeaderboardLocalizations) {
            queryParameters['fields[gameCenterLeaderboardLocalizations]'] = requestParameters.fieldsGameCenterLeaderboardLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsGameCenterLeaderboardSets) {
            queryParameters['fields[gameCenterLeaderboardSets]'] = requestParameters.fieldsGameCenterLeaderboardSets.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsGameCenterGroups) {
            queryParameters['fields[gameCenterGroups]'] = requestParameters.fieldsGameCenterGroups.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsGameCenterDetails) {
            queryParameters['fields[gameCenterDetails]'] = requestParameters.fieldsGameCenterDetails.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsGameCenterLeaderboards) {
            queryParameters['fields[gameCenterLeaderboards]'] = requestParameters.fieldsGameCenterLeaderboards.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsGameCenterLeaderboardReleases) {
            queryParameters['fields[gameCenterLeaderboardReleases]'] = requestParameters.fieldsGameCenterLeaderboardReleases.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limitGameCenterLeaderboardSets !== undefined) {
            queryParameters['limit[gameCenterLeaderboardSets]'] = requestParameters.limitGameCenterLeaderboardSets;
        }

        if (requestParameters.limitLocalizations !== undefined) {
            queryParameters['limit[localizations]'] = requestParameters.limitLocalizations;
        }

        if (requestParameters.limitReleases !== undefined) {
            queryParameters['limit[releases]'] = requestParameters.limitReleases;
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/gameCenterLeaderboardSetMemberLocalizations/{id}/gameCenterLeaderboard`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GameCenterLeaderboardResponseFromJSON(jsonValue));
    }

    /**
     */
    async gameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelated(requestParameters: GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardResponse> {
        const response = await this.gameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async gameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedRaw(requestParameters: GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardSetResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling gameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelated.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsGameCenterLeaderboardSetLocalizations) {
            queryParameters['fields[gameCenterLeaderboardSetLocalizations]'] = requestParameters.fieldsGameCenterLeaderboardSetLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsGameCenterLeaderboardSetReleases) {
            queryParameters['fields[gameCenterLeaderboardSetReleases]'] = requestParameters.fieldsGameCenterLeaderboardSetReleases.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsGameCenterLeaderboardSets) {
            queryParameters['fields[gameCenterLeaderboardSets]'] = requestParameters.fieldsGameCenterLeaderboardSets.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsGameCenterGroups) {
            queryParameters['fields[gameCenterGroups]'] = requestParameters.fieldsGameCenterGroups.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsGameCenterDetails) {
            queryParameters['fields[gameCenterDetails]'] = requestParameters.fieldsGameCenterDetails.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsGameCenterLeaderboards) {
            queryParameters['fields[gameCenterLeaderboards]'] = requestParameters.fieldsGameCenterLeaderboards.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limitLocalizations !== undefined) {
            queryParameters['limit[localizations]'] = requestParameters.limitLocalizations;
        }

        if (requestParameters.limitGameCenterLeaderboards !== undefined) {
            queryParameters['limit[gameCenterLeaderboards]'] = requestParameters.limitGameCenterLeaderboards;
        }

        if (requestParameters.limitReleases !== undefined) {
            queryParameters['limit[releases]'] = requestParameters.limitReleases;
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/gameCenterLeaderboardSetMemberLocalizations/{id}/gameCenterLeaderboardSet`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GameCenterLeaderboardSetResponseFromJSON(jsonValue));
    }

    /**
     */
    async gameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelated(requestParameters: GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardSetResponse> {
        const response = await this.gameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async gameCenterLeaderboardSetMemberLocalizationsGetCollectionRaw(requestParameters: GameCenterLeaderboardSetMemberLocalizationsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardSetMemberLocalizationsResponse>> {
        if (requestParameters.filterGameCenterLeaderboard === null || requestParameters.filterGameCenterLeaderboard === undefined) {
            throw new runtime.RequiredError('filterGameCenterLeaderboard','Required parameter requestParameters.filterGameCenterLeaderboard was null or undefined when calling gameCenterLeaderboardSetMemberLocalizationsGetCollection.');
        }

        if (requestParameters.filterGameCenterLeaderboardSet === null || requestParameters.filterGameCenterLeaderboardSet === undefined) {
            throw new runtime.RequiredError('filterGameCenterLeaderboardSet','Required parameter requestParameters.filterGameCenterLeaderboardSet was null or undefined when calling gameCenterLeaderboardSetMemberLocalizationsGetCollection.');
        }

        const queryParameters: any = {};

        if (requestParameters.filterGameCenterLeaderboard) {
            queryParameters['filter[gameCenterLeaderboard]'] = requestParameters.filterGameCenterLeaderboard.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.filterGameCenterLeaderboardSet) {
            queryParameters['filter[gameCenterLeaderboardSet]'] = requestParameters.filterGameCenterLeaderboardSet.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsGameCenterLeaderboardSetMemberLocalizations) {
            queryParameters['fields[gameCenterLeaderboardSetMemberLocalizations]'] = requestParameters.fieldsGameCenterLeaderboardSetMemberLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsGameCenterLeaderboardSets) {
            queryParameters['fields[gameCenterLeaderboardSets]'] = requestParameters.fieldsGameCenterLeaderboardSets.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsGameCenterLeaderboards) {
            queryParameters['fields[gameCenterLeaderboards]'] = requestParameters.fieldsGameCenterLeaderboards.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/gameCenterLeaderboardSetMemberLocalizations`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GameCenterLeaderboardSetMemberLocalizationsResponseFromJSON(jsonValue));
    }

    /**
     */
    async gameCenterLeaderboardSetMemberLocalizationsGetCollection(requestParameters: GameCenterLeaderboardSetMemberLocalizationsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardSetMemberLocalizationsResponse> {
        const response = await this.gameCenterLeaderboardSetMemberLocalizationsGetCollectionRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async gameCenterLeaderboardSetMemberLocalizationsUpdateInstanceRaw(requestParameters: GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardSetMemberLocalizationResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling gameCenterLeaderboardSetMemberLocalizationsUpdateInstance.');
        }

        if (requestParameters.gameCenterLeaderboardSetMemberLocalizationUpdateRequest === null || requestParameters.gameCenterLeaderboardSetMemberLocalizationUpdateRequest === undefined) {
            throw new runtime.RequiredError('gameCenterLeaderboardSetMemberLocalizationUpdateRequest','Required parameter requestParameters.gameCenterLeaderboardSetMemberLocalizationUpdateRequest was null or undefined when calling gameCenterLeaderboardSetMemberLocalizationsUpdateInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/gameCenterLeaderboardSetMemberLocalizations/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: GameCenterLeaderboardSetMemberLocalizationUpdateRequestToJSON(requestParameters.gameCenterLeaderboardSetMemberLocalizationUpdateRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GameCenterLeaderboardSetMemberLocalizationResponseFromJSON(jsonValue));
    }

    /**
     */
    async gameCenterLeaderboardSetMemberLocalizationsUpdateInstance(requestParameters: GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardSetMemberLocalizationResponse> {
        const response = await this.gameCenterLeaderboardSetMemberLocalizationsUpdateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardLocalizationsEnum = {
    FormatterOverride: 'formatterOverride',
    FormatterSuffix: 'formatterSuffix',
    FormatterSuffixSingular: 'formatterSuffixSingular',
    GameCenterLeaderboard: 'gameCenterLeaderboard',
    GameCenterLeaderboardImage: 'gameCenterLeaderboardImage',
    Locale: 'locale',
    Name: 'name'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardLocalizationsEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardLocalizationsEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardLocalizationsEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum = {
    GameCenterDetail: 'gameCenterDetail',
    GameCenterGroup: 'gameCenterGroup',
    GameCenterLeaderboards: 'gameCenterLeaderboards',
    GroupLeaderboardSet: 'groupLeaderboardSet',
    Localizations: 'localizations',
    ReferenceName: 'referenceName',
    Releases: 'releases',
    VendorIdentifier: 'vendorIdentifier'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterGroupsEnum = {
    GameCenterAchievements: 'gameCenterAchievements',
    GameCenterDetails: 'gameCenterDetails',
    GameCenterLeaderboardSets: 'gameCenterLeaderboardSets',
    GameCenterLeaderboards: 'gameCenterLeaderboards',
    ReferenceName: 'referenceName'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterGroupsEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterGroupsEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterGroupsEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterDetailsEnum = {
    AchievementReleases: 'achievementReleases',
    App: 'app',
    ArcadeEnabled: 'arcadeEnabled',
    ChallengeEnabled: 'challengeEnabled',
    DefaultGroupLeaderboard: 'defaultGroupLeaderboard',
    DefaultLeaderboard: 'defaultLeaderboard',
    GameCenterAchievements: 'gameCenterAchievements',
    GameCenterAppVersions: 'gameCenterAppVersions',
    GameCenterGroup: 'gameCenterGroup',
    GameCenterLeaderboardSets: 'gameCenterLeaderboardSets',
    GameCenterLeaderboards: 'gameCenterLeaderboards',
    LeaderboardReleases: 'leaderboardReleases',
    LeaderboardSetReleases: 'leaderboardSetReleases'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterDetailsEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterDetailsEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterDetailsEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardsEnum = {
    Archived: 'archived',
    DefaultFormatter: 'defaultFormatter',
    GameCenterDetail: 'gameCenterDetail',
    GameCenterGroup: 'gameCenterGroup',
    GameCenterLeaderboardSets: 'gameCenterLeaderboardSets',
    GroupLeaderboard: 'groupLeaderboard',
    Localizations: 'localizations',
    RecurrenceDuration: 'recurrenceDuration',
    RecurrenceRule: 'recurrenceRule',
    RecurrenceStartDate: 'recurrenceStartDate',
    ReferenceName: 'referenceName',
    Releases: 'releases',
    ScoreRangeEnd: 'scoreRangeEnd',
    ScoreRangeStart: 'scoreRangeStart',
    ScoreSortType: 'scoreSortType',
    SubmissionType: 'submissionType',
    VendorIdentifier: 'vendorIdentifier'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardsEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardsEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardsEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardReleasesEnum = {
    GameCenterDetail: 'gameCenterDetail',
    GameCenterLeaderboard: 'gameCenterLeaderboard',
    Live: 'live'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardReleasesEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardReleasesEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardReleasesEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedIncludeEnum = {
    GameCenterDetail: 'gameCenterDetail',
    GameCenterGroup: 'gameCenterGroup',
    GameCenterLeaderboardSets: 'gameCenterLeaderboardSets',
    GroupLeaderboard: 'groupLeaderboard',
    Localizations: 'localizations',
    Releases: 'releases'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedIncludeEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedIncludeEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedIncludeEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetLocalizationsEnum = {
    GameCenterLeaderboardSet: 'gameCenterLeaderboardSet',
    GameCenterLeaderboardSetImage: 'gameCenterLeaderboardSetImage',
    Locale: 'locale',
    Name: 'name'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetLocalizationsEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetLocalizationsEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetLocalizationsEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetReleasesEnum = {
    GameCenterDetail: 'gameCenterDetail',
    GameCenterLeaderboardSet: 'gameCenterLeaderboardSet',
    Live: 'live'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetReleasesEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetReleasesEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetReleasesEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum = {
    GameCenterDetail: 'gameCenterDetail',
    GameCenterGroup: 'gameCenterGroup',
    GameCenterLeaderboards: 'gameCenterLeaderboards',
    GroupLeaderboardSet: 'groupLeaderboardSet',
    Localizations: 'localizations',
    ReferenceName: 'referenceName',
    Releases: 'releases',
    VendorIdentifier: 'vendorIdentifier'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterGroupsEnum = {
    GameCenterAchievements: 'gameCenterAchievements',
    GameCenterDetails: 'gameCenterDetails',
    GameCenterLeaderboardSets: 'gameCenterLeaderboardSets',
    GameCenterLeaderboards: 'gameCenterLeaderboards',
    ReferenceName: 'referenceName'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterGroupsEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterGroupsEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterGroupsEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterDetailsEnum = {
    AchievementReleases: 'achievementReleases',
    App: 'app',
    ArcadeEnabled: 'arcadeEnabled',
    ChallengeEnabled: 'challengeEnabled',
    DefaultGroupLeaderboard: 'defaultGroupLeaderboard',
    DefaultLeaderboard: 'defaultLeaderboard',
    GameCenterAchievements: 'gameCenterAchievements',
    GameCenterAppVersions: 'gameCenterAppVersions',
    GameCenterGroup: 'gameCenterGroup',
    GameCenterLeaderboardSets: 'gameCenterLeaderboardSets',
    GameCenterLeaderboards: 'gameCenterLeaderboards',
    LeaderboardReleases: 'leaderboardReleases',
    LeaderboardSetReleases: 'leaderboardSetReleases'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterDetailsEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterDetailsEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterDetailsEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardsEnum = {
    Archived: 'archived',
    DefaultFormatter: 'defaultFormatter',
    GameCenterDetail: 'gameCenterDetail',
    GameCenterGroup: 'gameCenterGroup',
    GameCenterLeaderboardSets: 'gameCenterLeaderboardSets',
    GroupLeaderboard: 'groupLeaderboard',
    Localizations: 'localizations',
    RecurrenceDuration: 'recurrenceDuration',
    RecurrenceRule: 'recurrenceRule',
    RecurrenceStartDate: 'recurrenceStartDate',
    ReferenceName: 'referenceName',
    Releases: 'releases',
    ScoreRangeEnd: 'scoreRangeEnd',
    ScoreRangeStart: 'scoreRangeStart',
    ScoreSortType: 'scoreSortType',
    SubmissionType: 'submissionType',
    VendorIdentifier: 'vendorIdentifier'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardsEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardsEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedFieldsGameCenterLeaderboardsEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedIncludeEnum = {
    GameCenterDetail: 'gameCenterDetail',
    GameCenterGroup: 'gameCenterGroup',
    GameCenterLeaderboards: 'gameCenterLeaderboards',
    GroupLeaderboardSet: 'groupLeaderboardSet',
    Localizations: 'localizations',
    Releases: 'releases'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedIncludeEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedIncludeEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedIncludeEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardSetMemberLocalizationsEnum = {
    GameCenterLeaderboard: 'gameCenterLeaderboard',
    GameCenterLeaderboardSet: 'gameCenterLeaderboardSet',
    Locale: 'locale',
    Name: 'name'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardSetMemberLocalizationsEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardSetMemberLocalizationsEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardSetMemberLocalizationsEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGetCollectionIncludeEnum = {
    GameCenterLeaderboard: 'gameCenterLeaderboard',
    GameCenterLeaderboardSet: 'gameCenterLeaderboardSet'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGetCollectionIncludeEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGetCollectionIncludeEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGetCollectionIncludeEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardSetsEnum = {
    GameCenterDetail: 'gameCenterDetail',
    GameCenterGroup: 'gameCenterGroup',
    GameCenterLeaderboards: 'gameCenterLeaderboards',
    GroupLeaderboardSet: 'groupLeaderboardSet',
    Localizations: 'localizations',
    ReferenceName: 'referenceName',
    Releases: 'releases',
    VendorIdentifier: 'vendorIdentifier'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardSetsEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardSetsEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardSetsEnum];
/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardsEnum = {
    Archived: 'archived',
    DefaultFormatter: 'defaultFormatter',
    GameCenterDetail: 'gameCenterDetail',
    GameCenterGroup: 'gameCenterGroup',
    GameCenterLeaderboardSets: 'gameCenterLeaderboardSets',
    GroupLeaderboard: 'groupLeaderboard',
    Localizations: 'localizations',
    RecurrenceDuration: 'recurrenceDuration',
    RecurrenceRule: 'recurrenceRule',
    RecurrenceStartDate: 'recurrenceStartDate',
    ReferenceName: 'referenceName',
    Releases: 'releases',
    ScoreRangeEnd: 'scoreRangeEnd',
    ScoreRangeStart: 'scoreRangeStart',
    ScoreSortType: 'scoreSortType',
    SubmissionType: 'submissionType',
    VendorIdentifier: 'vendorIdentifier'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardsEnum = typeof GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardsEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationsGetCollectionFieldsGameCenterLeaderboardsEnum];
