/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AppPriceScheduleCreateRequest,
  AppPriceScheduleResponse,
  AppPricesV2Response,
  ErrorResponse,
  TerritoryResponse,
} from '../models';
import {
    AppPriceScheduleCreateRequestFromJSON,
    AppPriceScheduleCreateRequestToJSON,
    AppPriceScheduleResponseFromJSON,
    AppPriceScheduleResponseToJSON,
    AppPricesV2ResponseFromJSON,
    AppPricesV2ResponseToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    TerritoryResponseFromJSON,
    TerritoryResponseToJSON,
} from '../models';

export interface AppPriceSchedulesAutomaticPricesGetToManyRelatedRequest {
    id: string;
    filterEndDate?: Array<string>;
    filterStartDate?: Array<string>;
    filterTerritory?: Array<string>;
    fieldsAppPrices?: Array<AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsAppPricesEnum>;
    fieldsAppPricePoints?: Array<AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsAppPricePointsEnum>;
    fieldsTerritories?: Array<AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsTerritoriesEnum>;
    limit?: number;
    include?: Array<AppPriceSchedulesAutomaticPricesGetToManyRelatedIncludeEnum>;
}

export interface AppPriceSchedulesBaseTerritoryGetToOneRelatedRequest {
    id: string;
    fieldsTerritories?: Array<AppPriceSchedulesBaseTerritoryGetToOneRelatedFieldsTerritoriesEnum>;
}

export interface AppPriceSchedulesCreateInstanceRequest {
    appPriceScheduleCreateRequest: AppPriceScheduleCreateRequest;
}

export interface AppPriceSchedulesGetInstanceRequest {
    id: string;
    fieldsAppPriceSchedules?: Array<AppPriceSchedulesGetInstanceFieldsAppPriceSchedulesEnum>;
    include?: Array<AppPriceSchedulesGetInstanceIncludeEnum>;
    fieldsAppPrices?: Array<AppPriceSchedulesGetInstanceFieldsAppPricesEnum>;
    fieldsTerritories?: Array<AppPriceSchedulesGetInstanceFieldsTerritoriesEnum>;
    limitAutomaticPrices?: number;
    limitManualPrices?: number;
}

export interface AppPriceSchedulesManualPricesGetToManyRelatedRequest {
    id: string;
    filterEndDate?: Array<string>;
    filterStartDate?: Array<string>;
    filterTerritory?: Array<string>;
    fieldsAppPrices?: Array<AppPriceSchedulesManualPricesGetToManyRelatedFieldsAppPricesEnum>;
    fieldsAppPricePoints?: Array<AppPriceSchedulesManualPricesGetToManyRelatedFieldsAppPricePointsEnum>;
    fieldsTerritories?: Array<AppPriceSchedulesManualPricesGetToManyRelatedFieldsTerritoriesEnum>;
    limit?: number;
    include?: Array<AppPriceSchedulesManualPricesGetToManyRelatedIncludeEnum>;
}

/**
 * 
 */
export class AppPriceSchedulesApi extends runtime.BaseAPI {

    /**
     */
    async appPriceSchedulesAutomaticPricesGetToManyRelatedRaw(requestParameters: AppPriceSchedulesAutomaticPricesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppPricesV2Response>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling appPriceSchedulesAutomaticPricesGetToManyRelated.');
        }

        const queryParameters: any = {};

        if (requestParameters.filterEndDate) {
            queryParameters['filter[endDate]'] = requestParameters.filterEndDate.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.filterStartDate) {
            queryParameters['filter[startDate]'] = requestParameters.filterStartDate.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.filterTerritory) {
            queryParameters['filter[territory]'] = requestParameters.filterTerritory.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsAppPrices) {
            queryParameters['fields[appPrices]'] = requestParameters.fieldsAppPrices.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsAppPricePoints) {
            queryParameters['fields[appPricePoints]'] = requestParameters.fieldsAppPricePoints.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsTerritories) {
            queryParameters['fields[territories]'] = requestParameters.fieldsTerritories.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appPriceSchedules/{id}/automaticPrices`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppPricesV2ResponseFromJSON(jsonValue));
    }

    /**
     */
    async appPriceSchedulesAutomaticPricesGetToManyRelated(requestParameters: AppPriceSchedulesAutomaticPricesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppPricesV2Response> {
        const response = await this.appPriceSchedulesAutomaticPricesGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async appPriceSchedulesBaseTerritoryGetToOneRelatedRaw(requestParameters: AppPriceSchedulesBaseTerritoryGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TerritoryResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling appPriceSchedulesBaseTerritoryGetToOneRelated.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsTerritories) {
            queryParameters['fields[territories]'] = requestParameters.fieldsTerritories.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appPriceSchedules/{id}/baseTerritory`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TerritoryResponseFromJSON(jsonValue));
    }

    /**
     */
    async appPriceSchedulesBaseTerritoryGetToOneRelated(requestParameters: AppPriceSchedulesBaseTerritoryGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TerritoryResponse> {
        const response = await this.appPriceSchedulesBaseTerritoryGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async appPriceSchedulesCreateInstanceRaw(requestParameters: AppPriceSchedulesCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppPriceScheduleResponse>> {
        if (requestParameters.appPriceScheduleCreateRequest === null || requestParameters.appPriceScheduleCreateRequest === undefined) {
            throw new runtime.RequiredError('appPriceScheduleCreateRequest','Required parameter requestParameters.appPriceScheduleCreateRequest was null or undefined when calling appPriceSchedulesCreateInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appPriceSchedules`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AppPriceScheduleCreateRequestToJSON(requestParameters.appPriceScheduleCreateRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppPriceScheduleResponseFromJSON(jsonValue));
    }

    /**
     */
    async appPriceSchedulesCreateInstance(requestParameters: AppPriceSchedulesCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppPriceScheduleResponse> {
        const response = await this.appPriceSchedulesCreateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async appPriceSchedulesGetInstanceRaw(requestParameters: AppPriceSchedulesGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppPriceScheduleResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling appPriceSchedulesGetInstance.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsAppPriceSchedules) {
            queryParameters['fields[appPriceSchedules]'] = requestParameters.fieldsAppPriceSchedules.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsAppPrices) {
            queryParameters['fields[appPrices]'] = requestParameters.fieldsAppPrices.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsTerritories) {
            queryParameters['fields[territories]'] = requestParameters.fieldsTerritories.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limitAutomaticPrices !== undefined) {
            queryParameters['limit[automaticPrices]'] = requestParameters.limitAutomaticPrices;
        }

        if (requestParameters.limitManualPrices !== undefined) {
            queryParameters['limit[manualPrices]'] = requestParameters.limitManualPrices;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appPriceSchedules/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppPriceScheduleResponseFromJSON(jsonValue));
    }

    /**
     */
    async appPriceSchedulesGetInstance(requestParameters: AppPriceSchedulesGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppPriceScheduleResponse> {
        const response = await this.appPriceSchedulesGetInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async appPriceSchedulesManualPricesGetToManyRelatedRaw(requestParameters: AppPriceSchedulesManualPricesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppPricesV2Response>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling appPriceSchedulesManualPricesGetToManyRelated.');
        }

        const queryParameters: any = {};

        if (requestParameters.filterEndDate) {
            queryParameters['filter[endDate]'] = requestParameters.filterEndDate.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.filterStartDate) {
            queryParameters['filter[startDate]'] = requestParameters.filterStartDate.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.filterTerritory) {
            queryParameters['filter[territory]'] = requestParameters.filterTerritory.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsAppPrices) {
            queryParameters['fields[appPrices]'] = requestParameters.fieldsAppPrices.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsAppPricePoints) {
            queryParameters['fields[appPricePoints]'] = requestParameters.fieldsAppPricePoints.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsTerritories) {
            queryParameters['fields[territories]'] = requestParameters.fieldsTerritories.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appPriceSchedules/{id}/manualPrices`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppPricesV2ResponseFromJSON(jsonValue));
    }

    /**
     */
    async appPriceSchedulesManualPricesGetToManyRelated(requestParameters: AppPriceSchedulesManualPricesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppPricesV2Response> {
        const response = await this.appPriceSchedulesManualPricesGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsAppPricesEnum = {
    AppPricePoint: 'appPricePoint',
    EndDate: 'endDate',
    Manual: 'manual',
    StartDate: 'startDate',
    Territory: 'territory'
} as const;
export type AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsAppPricesEnum = typeof AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsAppPricesEnum[keyof typeof AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsAppPricesEnum];
/**
 * @export
 */
export const AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsAppPricePointsEnum = {
    App: 'app',
    CustomerPrice: 'customerPrice',
    Equalizations: 'equalizations',
    Proceeds: 'proceeds',
    Territory: 'territory'
} as const;
export type AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsAppPricePointsEnum = typeof AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsAppPricePointsEnum[keyof typeof AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsAppPricePointsEnum];
/**
 * @export
 */
export const AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsTerritoriesEnum = {
    Currency: 'currency'
} as const;
export type AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsTerritoriesEnum = typeof AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsTerritoriesEnum[keyof typeof AppPriceSchedulesAutomaticPricesGetToManyRelatedFieldsTerritoriesEnum];
/**
 * @export
 */
export const AppPriceSchedulesAutomaticPricesGetToManyRelatedIncludeEnum = {
    AppPricePoint: 'appPricePoint',
    Territory: 'territory'
} as const;
export type AppPriceSchedulesAutomaticPricesGetToManyRelatedIncludeEnum = typeof AppPriceSchedulesAutomaticPricesGetToManyRelatedIncludeEnum[keyof typeof AppPriceSchedulesAutomaticPricesGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export const AppPriceSchedulesBaseTerritoryGetToOneRelatedFieldsTerritoriesEnum = {
    Currency: 'currency'
} as const;
export type AppPriceSchedulesBaseTerritoryGetToOneRelatedFieldsTerritoriesEnum = typeof AppPriceSchedulesBaseTerritoryGetToOneRelatedFieldsTerritoriesEnum[keyof typeof AppPriceSchedulesBaseTerritoryGetToOneRelatedFieldsTerritoriesEnum];
/**
 * @export
 */
export const AppPriceSchedulesGetInstanceFieldsAppPriceSchedulesEnum = {
    App: 'app',
    AutomaticPrices: 'automaticPrices',
    BaseTerritory: 'baseTerritory',
    ManualPrices: 'manualPrices'
} as const;
export type AppPriceSchedulesGetInstanceFieldsAppPriceSchedulesEnum = typeof AppPriceSchedulesGetInstanceFieldsAppPriceSchedulesEnum[keyof typeof AppPriceSchedulesGetInstanceFieldsAppPriceSchedulesEnum];
/**
 * @export
 */
export const AppPriceSchedulesGetInstanceIncludeEnum = {
    App: 'app',
    AutomaticPrices: 'automaticPrices',
    BaseTerritory: 'baseTerritory',
    ManualPrices: 'manualPrices'
} as const;
export type AppPriceSchedulesGetInstanceIncludeEnum = typeof AppPriceSchedulesGetInstanceIncludeEnum[keyof typeof AppPriceSchedulesGetInstanceIncludeEnum];
/**
 * @export
 */
export const AppPriceSchedulesGetInstanceFieldsAppPricesEnum = {
    AppPricePoint: 'appPricePoint',
    EndDate: 'endDate',
    Manual: 'manual',
    StartDate: 'startDate',
    Territory: 'territory'
} as const;
export type AppPriceSchedulesGetInstanceFieldsAppPricesEnum = typeof AppPriceSchedulesGetInstanceFieldsAppPricesEnum[keyof typeof AppPriceSchedulesGetInstanceFieldsAppPricesEnum];
/**
 * @export
 */
export const AppPriceSchedulesGetInstanceFieldsTerritoriesEnum = {
    Currency: 'currency'
} as const;
export type AppPriceSchedulesGetInstanceFieldsTerritoriesEnum = typeof AppPriceSchedulesGetInstanceFieldsTerritoriesEnum[keyof typeof AppPriceSchedulesGetInstanceFieldsTerritoriesEnum];
/**
 * @export
 */
export const AppPriceSchedulesManualPricesGetToManyRelatedFieldsAppPricesEnum = {
    AppPricePoint: 'appPricePoint',
    EndDate: 'endDate',
    Manual: 'manual',
    StartDate: 'startDate',
    Territory: 'territory'
} as const;
export type AppPriceSchedulesManualPricesGetToManyRelatedFieldsAppPricesEnum = typeof AppPriceSchedulesManualPricesGetToManyRelatedFieldsAppPricesEnum[keyof typeof AppPriceSchedulesManualPricesGetToManyRelatedFieldsAppPricesEnum];
/**
 * @export
 */
export const AppPriceSchedulesManualPricesGetToManyRelatedFieldsAppPricePointsEnum = {
    App: 'app',
    CustomerPrice: 'customerPrice',
    Equalizations: 'equalizations',
    Proceeds: 'proceeds',
    Territory: 'territory'
} as const;
export type AppPriceSchedulesManualPricesGetToManyRelatedFieldsAppPricePointsEnum = typeof AppPriceSchedulesManualPricesGetToManyRelatedFieldsAppPricePointsEnum[keyof typeof AppPriceSchedulesManualPricesGetToManyRelatedFieldsAppPricePointsEnum];
/**
 * @export
 */
export const AppPriceSchedulesManualPricesGetToManyRelatedFieldsTerritoriesEnum = {
    Currency: 'currency'
} as const;
export type AppPriceSchedulesManualPricesGetToManyRelatedFieldsTerritoriesEnum = typeof AppPriceSchedulesManualPricesGetToManyRelatedFieldsTerritoriesEnum[keyof typeof AppPriceSchedulesManualPricesGetToManyRelatedFieldsTerritoriesEnum];
/**
 * @export
 */
export const AppPriceSchedulesManualPricesGetToManyRelatedIncludeEnum = {
    AppPricePoint: 'appPricePoint',
    Territory: 'territory'
} as const;
export type AppPriceSchedulesManualPricesGetToManyRelatedIncludeEnum = typeof AppPriceSchedulesManualPricesGetToManyRelatedIncludeEnum[keyof typeof AppPriceSchedulesManualPricesGetToManyRelatedIncludeEnum];
