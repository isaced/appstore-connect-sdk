/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AppPricePointV3Response,
  AppPricePointsV3Response,
  ErrorResponse,
} from '../models';
import {
    AppPricePointV3ResponseFromJSON,
    AppPricePointV3ResponseToJSON,
    AppPricePointsV3ResponseFromJSON,
    AppPricePointsV3ResponseToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models';

export interface AppPricePointsV3EqualizationsGetToManyRelatedRequest {
    id: string;
    filterTerritory?: Array<string>;
    fieldsAppPricePoints?: Array<AppPricePointsV3EqualizationsGetToManyRelatedFieldsAppPricePointsEnum>;
    fieldsApps?: Array<AppPricePointsV3EqualizationsGetToManyRelatedFieldsAppsEnum>;
    fieldsTerritories?: Array<AppPricePointsV3EqualizationsGetToManyRelatedFieldsTerritoriesEnum>;
    limit?: number;
    include?: Array<AppPricePointsV3EqualizationsGetToManyRelatedIncludeEnum>;
}

export interface AppPricePointsV3GetInstanceRequest {
    id: string;
    fieldsAppPricePoints?: Array<AppPricePointsV3GetInstanceFieldsAppPricePointsEnum>;
    include?: Array<AppPricePointsV3GetInstanceIncludeEnum>;
}

/**
 * 
 */
export class AppPricePointsApi extends runtime.BaseAPI {

    /**
     */
    async appPricePointsV3EqualizationsGetToManyRelatedRaw(requestParameters: AppPricePointsV3EqualizationsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppPricePointsV3Response>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling appPricePointsV3EqualizationsGetToManyRelated.');
        }

        const queryParameters: any = {};

        if (requestParameters.filterTerritory) {
            queryParameters['filter[territory]'] = requestParameters.filterTerritory.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsAppPricePoints) {
            queryParameters['fields[appPricePoints]'] = requestParameters.fieldsAppPricePoints.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsApps) {
            queryParameters['fields[apps]'] = requestParameters.fieldsApps.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsTerritories) {
            queryParameters['fields[territories]'] = requestParameters.fieldsTerritories.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v3/appPricePoints/{id}/equalizations`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppPricePointsV3ResponseFromJSON(jsonValue));
    }

    /**
     */
    async appPricePointsV3EqualizationsGetToManyRelated(requestParameters: AppPricePointsV3EqualizationsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppPricePointsV3Response> {
        const response = await this.appPricePointsV3EqualizationsGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async appPricePointsV3GetInstanceRaw(requestParameters: AppPricePointsV3GetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppPricePointV3Response>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling appPricePointsV3GetInstance.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsAppPricePoints) {
            queryParameters['fields[appPricePoints]'] = requestParameters.fieldsAppPricePoints.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v3/appPricePoints/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppPricePointV3ResponseFromJSON(jsonValue));
    }

    /**
     */
    async appPricePointsV3GetInstance(requestParameters: AppPricePointsV3GetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppPricePointV3Response> {
        const response = await this.appPricePointsV3GetInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const AppPricePointsV3EqualizationsGetToManyRelatedFieldsAppPricePointsEnum = {
    App: 'app',
    CustomerPrice: 'customerPrice',
    Equalizations: 'equalizations',
    Proceeds: 'proceeds',
    Territory: 'territory'
} as const;
export type AppPricePointsV3EqualizationsGetToManyRelatedFieldsAppPricePointsEnum = typeof AppPricePointsV3EqualizationsGetToManyRelatedFieldsAppPricePointsEnum[keyof typeof AppPricePointsV3EqualizationsGetToManyRelatedFieldsAppPricePointsEnum];
/**
 * @export
 */
export const AppPricePointsV3EqualizationsGetToManyRelatedFieldsAppsEnum = {
    AlternativeDistributionKey: 'alternativeDistributionKey',
    AnalyticsReportRequests: 'analyticsReportRequests',
    AppAvailability: 'appAvailability',
    AppClips: 'appClips',
    AppCustomProductPages: 'appCustomProductPages',
    AppEncryptionDeclarations: 'appEncryptionDeclarations',
    AppEvents: 'appEvents',
    AppInfos: 'appInfos',
    AppPricePoints: 'appPricePoints',
    AppPriceSchedule: 'appPriceSchedule',
    AppStoreVersionExperimentsV2: 'appStoreVersionExperimentsV2',
    AppStoreVersions: 'appStoreVersions',
    BetaAppLocalizations: 'betaAppLocalizations',
    BetaAppReviewDetail: 'betaAppReviewDetail',
    BetaGroups: 'betaGroups',
    BetaLicenseAgreement: 'betaLicenseAgreement',
    BetaTesters: 'betaTesters',
    Builds: 'builds',
    BundleId: 'bundleId',
    CiProduct: 'ciProduct',
    ContentRightsDeclaration: 'contentRightsDeclaration',
    CustomerReviews: 'customerReviews',
    EndUserLicenseAgreement: 'endUserLicenseAgreement',
    GameCenterDetail: 'gameCenterDetail',
    GameCenterEnabledVersions: 'gameCenterEnabledVersions',
    InAppPurchases: 'inAppPurchases',
    InAppPurchasesV2: 'inAppPurchasesV2',
    IsOrEverWasMadeForKids: 'isOrEverWasMadeForKids',
    MarketplaceSearchDetail: 'marketplaceSearchDetail',
    Name: 'name',
    PerfPowerMetrics: 'perfPowerMetrics',
    PreOrder: 'preOrder',
    PreReleaseVersions: 'preReleaseVersions',
    PrimaryLocale: 'primaryLocale',
    PromotedPurchases: 'promotedPurchases',
    ReviewSubmissions: 'reviewSubmissions',
    Sku: 'sku',
    SubscriptionGracePeriod: 'subscriptionGracePeriod',
    SubscriptionGroups: 'subscriptionGroups',
    SubscriptionStatusUrl: 'subscriptionStatusUrl',
    SubscriptionStatusUrlForSandbox: 'subscriptionStatusUrlForSandbox',
    SubscriptionStatusUrlVersion: 'subscriptionStatusUrlVersion',
    SubscriptionStatusUrlVersionForSandbox: 'subscriptionStatusUrlVersionForSandbox'
} as const;
export type AppPricePointsV3EqualizationsGetToManyRelatedFieldsAppsEnum = typeof AppPricePointsV3EqualizationsGetToManyRelatedFieldsAppsEnum[keyof typeof AppPricePointsV3EqualizationsGetToManyRelatedFieldsAppsEnum];
/**
 * @export
 */
export const AppPricePointsV3EqualizationsGetToManyRelatedFieldsTerritoriesEnum = {
    Currency: 'currency'
} as const;
export type AppPricePointsV3EqualizationsGetToManyRelatedFieldsTerritoriesEnum = typeof AppPricePointsV3EqualizationsGetToManyRelatedFieldsTerritoriesEnum[keyof typeof AppPricePointsV3EqualizationsGetToManyRelatedFieldsTerritoriesEnum];
/**
 * @export
 */
export const AppPricePointsV3EqualizationsGetToManyRelatedIncludeEnum = {
    App: 'app',
    Territory: 'territory'
} as const;
export type AppPricePointsV3EqualizationsGetToManyRelatedIncludeEnum = typeof AppPricePointsV3EqualizationsGetToManyRelatedIncludeEnum[keyof typeof AppPricePointsV3EqualizationsGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export const AppPricePointsV3GetInstanceFieldsAppPricePointsEnum = {
    App: 'app',
    CustomerPrice: 'customerPrice',
    Equalizations: 'equalizations',
    Proceeds: 'proceeds',
    Territory: 'territory'
} as const;
export type AppPricePointsV3GetInstanceFieldsAppPricePointsEnum = typeof AppPricePointsV3GetInstanceFieldsAppPricePointsEnum[keyof typeof AppPricePointsV3GetInstanceFieldsAppPricePointsEnum];
/**
 * @export
 */
export const AppPricePointsV3GetInstanceIncludeEnum = {
    App: 'app',
    Territory: 'territory'
} as const;
export type AppPricePointsV3GetInstanceIncludeEnum = typeof AppPricePointsV3GetInstanceIncludeEnum[keyof typeof AppPricePointsV3GetInstanceIncludeEnum];
