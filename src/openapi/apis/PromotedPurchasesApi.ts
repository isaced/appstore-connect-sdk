/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  PromotedPurchaseCreateRequest,
  PromotedPurchaseImagesResponse,
  PromotedPurchaseResponse,
  PromotedPurchaseUpdateRequest,
} from '../models';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    PromotedPurchaseCreateRequestFromJSON,
    PromotedPurchaseCreateRequestToJSON,
    PromotedPurchaseImagesResponseFromJSON,
    PromotedPurchaseImagesResponseToJSON,
    PromotedPurchaseResponseFromJSON,
    PromotedPurchaseResponseToJSON,
    PromotedPurchaseUpdateRequestFromJSON,
    PromotedPurchaseUpdateRequestToJSON,
} from '../models';

export interface PromotedPurchasesCreateInstanceRequest {
    promotedPurchaseCreateRequest: PromotedPurchaseCreateRequest;
}

export interface PromotedPurchasesDeleteInstanceRequest {
    id: string;
}

export interface PromotedPurchasesGetInstanceRequest {
    id: string;
    fieldsPromotedPurchases?: Array<PromotedPurchasesGetInstanceFieldsPromotedPurchasesEnum>;
    include?: Array<PromotedPurchasesGetInstanceIncludeEnum>;
    fieldsPromotedPurchaseImages?: Array<PromotedPurchasesGetInstanceFieldsPromotedPurchaseImagesEnum>;
    limitPromotionImages?: number;
}

export interface PromotedPurchasesPromotionImagesGetToManyRelatedRequest {
    id: string;
    fieldsPromotedPurchases?: Array<PromotedPurchasesPromotionImagesGetToManyRelatedFieldsPromotedPurchasesEnum>;
    fieldsPromotedPurchaseImages?: Array<PromotedPurchasesPromotionImagesGetToManyRelatedFieldsPromotedPurchaseImagesEnum>;
    limit?: number;
    include?: Array<PromotedPurchasesPromotionImagesGetToManyRelatedIncludeEnum>;
}

export interface PromotedPurchasesUpdateInstanceRequest {
    id: string;
    promotedPurchaseUpdateRequest: PromotedPurchaseUpdateRequest;
}

/**
 * 
 */
export class PromotedPurchasesApi extends runtime.BaseAPI {

    /**
     */
    async promotedPurchasesCreateInstanceRaw(requestParameters: PromotedPurchasesCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PromotedPurchaseResponse>> {
        if (requestParameters.promotedPurchaseCreateRequest === null || requestParameters.promotedPurchaseCreateRequest === undefined) {
            throw new runtime.RequiredError('promotedPurchaseCreateRequest','Required parameter requestParameters.promotedPurchaseCreateRequest was null or undefined when calling promotedPurchasesCreateInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/promotedPurchases`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PromotedPurchaseCreateRequestToJSON(requestParameters.promotedPurchaseCreateRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PromotedPurchaseResponseFromJSON(jsonValue));
    }

    /**
     */
    async promotedPurchasesCreateInstance(requestParameters: PromotedPurchasesCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PromotedPurchaseResponse> {
        const response = await this.promotedPurchasesCreateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async promotedPurchasesDeleteInstanceRaw(requestParameters: PromotedPurchasesDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling promotedPurchasesDeleteInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/promotedPurchases/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async promotedPurchasesDeleteInstance(requestParameters: PromotedPurchasesDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.promotedPurchasesDeleteInstanceRaw(requestParameters, initOverrides);
    }

    /**
     */
    async promotedPurchasesGetInstanceRaw(requestParameters: PromotedPurchasesGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PromotedPurchaseResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling promotedPurchasesGetInstance.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsPromotedPurchases) {
            queryParameters['fields[promotedPurchases]'] = requestParameters.fieldsPromotedPurchases.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsPromotedPurchaseImages) {
            queryParameters['fields[promotedPurchaseImages]'] = requestParameters.fieldsPromotedPurchaseImages.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limitPromotionImages !== undefined) {
            queryParameters['limit[promotionImages]'] = requestParameters.limitPromotionImages;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/promotedPurchases/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PromotedPurchaseResponseFromJSON(jsonValue));
    }

    /**
     */
    async promotedPurchasesGetInstance(requestParameters: PromotedPurchasesGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PromotedPurchaseResponse> {
        const response = await this.promotedPurchasesGetInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async promotedPurchasesPromotionImagesGetToManyRelatedRaw(requestParameters: PromotedPurchasesPromotionImagesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PromotedPurchaseImagesResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling promotedPurchasesPromotionImagesGetToManyRelated.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsPromotedPurchases) {
            queryParameters['fields[promotedPurchases]'] = requestParameters.fieldsPromotedPurchases.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsPromotedPurchaseImages) {
            queryParameters['fields[promotedPurchaseImages]'] = requestParameters.fieldsPromotedPurchaseImages.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/promotedPurchases/{id}/promotionImages`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PromotedPurchaseImagesResponseFromJSON(jsonValue));
    }

    /**
     */
    async promotedPurchasesPromotionImagesGetToManyRelated(requestParameters: PromotedPurchasesPromotionImagesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PromotedPurchaseImagesResponse> {
        const response = await this.promotedPurchasesPromotionImagesGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async promotedPurchasesUpdateInstanceRaw(requestParameters: PromotedPurchasesUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PromotedPurchaseResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling promotedPurchasesUpdateInstance.');
        }

        if (requestParameters.promotedPurchaseUpdateRequest === null || requestParameters.promotedPurchaseUpdateRequest === undefined) {
            throw new runtime.RequiredError('promotedPurchaseUpdateRequest','Required parameter requestParameters.promotedPurchaseUpdateRequest was null or undefined when calling promotedPurchasesUpdateInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/promotedPurchases/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: PromotedPurchaseUpdateRequestToJSON(requestParameters.promotedPurchaseUpdateRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PromotedPurchaseResponseFromJSON(jsonValue));
    }

    /**
     */
    async promotedPurchasesUpdateInstance(requestParameters: PromotedPurchasesUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PromotedPurchaseResponse> {
        const response = await this.promotedPurchasesUpdateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const PromotedPurchasesGetInstanceFieldsPromotedPurchasesEnum = {
    App: 'app',
    Enabled: 'enabled',
    InAppPurchaseV2: 'inAppPurchaseV2',
    PromotionImages: 'promotionImages',
    State: 'state',
    Subscription: 'subscription',
    VisibleForAllUsers: 'visibleForAllUsers'
} as const;
export type PromotedPurchasesGetInstanceFieldsPromotedPurchasesEnum = typeof PromotedPurchasesGetInstanceFieldsPromotedPurchasesEnum[keyof typeof PromotedPurchasesGetInstanceFieldsPromotedPurchasesEnum];
/**
 * @export
 */
export const PromotedPurchasesGetInstanceIncludeEnum = {
    InAppPurchaseV2: 'inAppPurchaseV2',
    PromotionImages: 'promotionImages',
    Subscription: 'subscription'
} as const;
export type PromotedPurchasesGetInstanceIncludeEnum = typeof PromotedPurchasesGetInstanceIncludeEnum[keyof typeof PromotedPurchasesGetInstanceIncludeEnum];
/**
 * @export
 */
export const PromotedPurchasesGetInstanceFieldsPromotedPurchaseImagesEnum = {
    AssetToken: 'assetToken',
    AssetType: 'assetType',
    FileName: 'fileName',
    FileSize: 'fileSize',
    ImageAsset: 'imageAsset',
    PromotedPurchase: 'promotedPurchase',
    SourceFileChecksum: 'sourceFileChecksum',
    State: 'state',
    UploadOperations: 'uploadOperations',
    Uploaded: 'uploaded'
} as const;
export type PromotedPurchasesGetInstanceFieldsPromotedPurchaseImagesEnum = typeof PromotedPurchasesGetInstanceFieldsPromotedPurchaseImagesEnum[keyof typeof PromotedPurchasesGetInstanceFieldsPromotedPurchaseImagesEnum];
/**
 * @export
 */
export const PromotedPurchasesPromotionImagesGetToManyRelatedFieldsPromotedPurchasesEnum = {
    App: 'app',
    Enabled: 'enabled',
    InAppPurchaseV2: 'inAppPurchaseV2',
    PromotionImages: 'promotionImages',
    State: 'state',
    Subscription: 'subscription',
    VisibleForAllUsers: 'visibleForAllUsers'
} as const;
export type PromotedPurchasesPromotionImagesGetToManyRelatedFieldsPromotedPurchasesEnum = typeof PromotedPurchasesPromotionImagesGetToManyRelatedFieldsPromotedPurchasesEnum[keyof typeof PromotedPurchasesPromotionImagesGetToManyRelatedFieldsPromotedPurchasesEnum];
/**
 * @export
 */
export const PromotedPurchasesPromotionImagesGetToManyRelatedFieldsPromotedPurchaseImagesEnum = {
    AssetToken: 'assetToken',
    AssetType: 'assetType',
    FileName: 'fileName',
    FileSize: 'fileSize',
    ImageAsset: 'imageAsset',
    PromotedPurchase: 'promotedPurchase',
    SourceFileChecksum: 'sourceFileChecksum',
    State: 'state',
    UploadOperations: 'uploadOperations',
    Uploaded: 'uploaded'
} as const;
export type PromotedPurchasesPromotionImagesGetToManyRelatedFieldsPromotedPurchaseImagesEnum = typeof PromotedPurchasesPromotionImagesGetToManyRelatedFieldsPromotedPurchaseImagesEnum[keyof typeof PromotedPurchasesPromotionImagesGetToManyRelatedFieldsPromotedPurchaseImagesEnum];
/**
 * @export
 */
export const PromotedPurchasesPromotionImagesGetToManyRelatedIncludeEnum = {
    PromotedPurchase: 'promotedPurchase'
} as const;
export type PromotedPurchasesPromotionImagesGetToManyRelatedIncludeEnum = typeof PromotedPurchasesPromotionImagesGetToManyRelatedIncludeEnum[keyof typeof PromotedPurchasesPromotionImagesGetToManyRelatedIncludeEnum];
