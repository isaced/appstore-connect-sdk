/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  MarketplaceWebhookCreateRequest,
  MarketplaceWebhookResponse,
  MarketplaceWebhookUpdateRequest,
  MarketplaceWebhooksResponse,
} from '../models';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    MarketplaceWebhookCreateRequestFromJSON,
    MarketplaceWebhookCreateRequestToJSON,
    MarketplaceWebhookResponseFromJSON,
    MarketplaceWebhookResponseToJSON,
    MarketplaceWebhookUpdateRequestFromJSON,
    MarketplaceWebhookUpdateRequestToJSON,
    MarketplaceWebhooksResponseFromJSON,
    MarketplaceWebhooksResponseToJSON,
} from '../models';

export interface MarketplaceWebhooksCreateInstanceRequest {
    marketplaceWebhookCreateRequest: MarketplaceWebhookCreateRequest;
}

export interface MarketplaceWebhooksDeleteInstanceRequest {
    id: string;
}

export interface MarketplaceWebhooksGetCollectionRequest {
    fieldsMarketplaceWebhooks?: Array<MarketplaceWebhooksGetCollectionFieldsMarketplaceWebhooksEnum>;
    limit?: number;
}

export interface MarketplaceWebhooksUpdateInstanceRequest {
    id: string;
    marketplaceWebhookUpdateRequest: MarketplaceWebhookUpdateRequest;
}

/**
 * 
 */
export class MarketplaceWebhooksApi extends runtime.BaseAPI {

    /**
     */
    async marketplaceWebhooksCreateInstanceRaw(requestParameters: MarketplaceWebhooksCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MarketplaceWebhookResponse>> {
        if (requestParameters.marketplaceWebhookCreateRequest === null || requestParameters.marketplaceWebhookCreateRequest === undefined) {
            throw new runtime.RequiredError('marketplaceWebhookCreateRequest','Required parameter requestParameters.marketplaceWebhookCreateRequest was null or undefined when calling marketplaceWebhooksCreateInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/marketplaceWebhooks`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MarketplaceWebhookCreateRequestToJSON(requestParameters.marketplaceWebhookCreateRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MarketplaceWebhookResponseFromJSON(jsonValue));
    }

    /**
     */
    async marketplaceWebhooksCreateInstance(requestParameters: MarketplaceWebhooksCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MarketplaceWebhookResponse> {
        const response = await this.marketplaceWebhooksCreateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async marketplaceWebhooksDeleteInstanceRaw(requestParameters: MarketplaceWebhooksDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling marketplaceWebhooksDeleteInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/marketplaceWebhooks/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async marketplaceWebhooksDeleteInstance(requestParameters: MarketplaceWebhooksDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketplaceWebhooksDeleteInstanceRaw(requestParameters, initOverrides);
    }

    /**
     */
    async marketplaceWebhooksGetCollectionRaw(requestParameters: MarketplaceWebhooksGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MarketplaceWebhooksResponse>> {
        const queryParameters: any = {};

        if (requestParameters.fieldsMarketplaceWebhooks) {
            queryParameters['fields[marketplaceWebhooks]'] = requestParameters.fieldsMarketplaceWebhooks.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/marketplaceWebhooks`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MarketplaceWebhooksResponseFromJSON(jsonValue));
    }

    /**
     */
    async marketplaceWebhooksGetCollection(requestParameters: MarketplaceWebhooksGetCollectionRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MarketplaceWebhooksResponse> {
        const response = await this.marketplaceWebhooksGetCollectionRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async marketplaceWebhooksUpdateInstanceRaw(requestParameters: MarketplaceWebhooksUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MarketplaceWebhookResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling marketplaceWebhooksUpdateInstance.');
        }

        if (requestParameters.marketplaceWebhookUpdateRequest === null || requestParameters.marketplaceWebhookUpdateRequest === undefined) {
            throw new runtime.RequiredError('marketplaceWebhookUpdateRequest','Required parameter requestParameters.marketplaceWebhookUpdateRequest was null or undefined when calling marketplaceWebhooksUpdateInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/marketplaceWebhooks/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: MarketplaceWebhookUpdateRequestToJSON(requestParameters.marketplaceWebhookUpdateRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MarketplaceWebhookResponseFromJSON(jsonValue));
    }

    /**
     */
    async marketplaceWebhooksUpdateInstance(requestParameters: MarketplaceWebhooksUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MarketplaceWebhookResponse> {
        const response = await this.marketplaceWebhooksUpdateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const MarketplaceWebhooksGetCollectionFieldsMarketplaceWebhooksEnum = {
    EndpointUrl: 'endpointUrl',
    Secret: 'secret'
} as const;
export type MarketplaceWebhooksGetCollectionFieldsMarketplaceWebhooksEnum = typeof MarketplaceWebhooksGetCollectionFieldsMarketplaceWebhooksEnum[keyof typeof MarketplaceWebhooksGetCollectionFieldsMarketplaceWebhooksEnum];
