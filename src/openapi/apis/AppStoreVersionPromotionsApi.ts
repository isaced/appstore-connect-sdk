/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AppStoreVersionPromotionCreateRequest,
  AppStoreVersionPromotionResponse,
  ErrorResponse,
} from '../models';
import {
    AppStoreVersionPromotionCreateRequestFromJSON,
    AppStoreVersionPromotionCreateRequestToJSON,
    AppStoreVersionPromotionResponseFromJSON,
    AppStoreVersionPromotionResponseToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models';

export interface AppStoreVersionPromotionsCreateInstanceRequest {
    appStoreVersionPromotionCreateRequest: AppStoreVersionPromotionCreateRequest;
}

/**
 * 
 */
export class AppStoreVersionPromotionsApi extends runtime.BaseAPI {

    /**
     */
    async appStoreVersionPromotionsCreateInstanceRaw(requestParameters: AppStoreVersionPromotionsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppStoreVersionPromotionResponse>> {
        if (requestParameters.appStoreVersionPromotionCreateRequest === null || requestParameters.appStoreVersionPromotionCreateRequest === undefined) {
            throw new runtime.RequiredError('appStoreVersionPromotionCreateRequest','Required parameter requestParameters.appStoreVersionPromotionCreateRequest was null or undefined when calling appStoreVersionPromotionsCreateInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appStoreVersionPromotions`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AppStoreVersionPromotionCreateRequestToJSON(requestParameters.appStoreVersionPromotionCreateRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppStoreVersionPromotionResponseFromJSON(jsonValue));
    }

    /**
     */
    async appStoreVersionPromotionsCreateInstance(requestParameters: AppStoreVersionPromotionsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppStoreVersionPromotionResponse> {
        const response = await this.appStoreVersionPromotionsCreateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
