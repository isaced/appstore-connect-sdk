/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AppCategoriesResponse,
  AppCategoriesWithoutIncludesResponse,
  AppCategoryResponse,
  AppCategoryWithoutIncludesResponse,
  ErrorResponse,
} from '../models';
import {
    AppCategoriesResponseFromJSON,
    AppCategoriesResponseToJSON,
    AppCategoriesWithoutIncludesResponseFromJSON,
    AppCategoriesWithoutIncludesResponseToJSON,
    AppCategoryResponseFromJSON,
    AppCategoryResponseToJSON,
    AppCategoryWithoutIncludesResponseFromJSON,
    AppCategoryWithoutIncludesResponseToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models';

export interface AppCategoriesGetCollectionRequest {
    filterPlatforms?: Array<AppCategoriesGetCollectionFilterPlatformsEnum>;
    existsParent?: boolean;
    fieldsAppCategories?: Array<AppCategoriesGetCollectionFieldsAppCategoriesEnum>;
    limit?: number;
    include?: Array<AppCategoriesGetCollectionIncludeEnum>;
    limitSubcategories?: number;
}

export interface AppCategoriesGetInstanceRequest {
    id: string;
    fieldsAppCategories?: Array<AppCategoriesGetInstanceFieldsAppCategoriesEnum>;
    include?: Array<AppCategoriesGetInstanceIncludeEnum>;
    limitSubcategories?: number;
}

export interface AppCategoriesParentGetToOneRelatedRequest {
    id: string;
    fieldsAppCategories?: Array<AppCategoriesParentGetToOneRelatedFieldsAppCategoriesEnum>;
}

export interface AppCategoriesSubcategoriesGetToManyRelatedRequest {
    id: string;
    fieldsAppCategories?: Array<AppCategoriesSubcategoriesGetToManyRelatedFieldsAppCategoriesEnum>;
    limit?: number;
}

/**
 * 
 */
export class AppCategoriesApi extends runtime.BaseAPI {

    /**
     */
    async appCategoriesGetCollectionRaw(requestParameters: AppCategoriesGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCategoriesResponse>> {
        const queryParameters: any = {};

        if (requestParameters.filterPlatforms) {
            queryParameters['filter[platforms]'] = requestParameters.filterPlatforms.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.existsParent !== undefined) {
            queryParameters['exists[parent]'] = requestParameters.existsParent;
        }

        if (requestParameters.fieldsAppCategories) {
            queryParameters['fields[appCategories]'] = requestParameters.fieldsAppCategories.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limitSubcategories !== undefined) {
            queryParameters['limit[subcategories]'] = requestParameters.limitSubcategories;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appCategories`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppCategoriesResponseFromJSON(jsonValue));
    }

    /**
     */
    async appCategoriesGetCollection(requestParameters: AppCategoriesGetCollectionRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCategoriesResponse> {
        const response = await this.appCategoriesGetCollectionRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async appCategoriesGetInstanceRaw(requestParameters: AppCategoriesGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCategoryResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling appCategoriesGetInstance.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsAppCategories) {
            queryParameters['fields[appCategories]'] = requestParameters.fieldsAppCategories.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limitSubcategories !== undefined) {
            queryParameters['limit[subcategories]'] = requestParameters.limitSubcategories;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appCategories/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppCategoryResponseFromJSON(jsonValue));
    }

    /**
     */
    async appCategoriesGetInstance(requestParameters: AppCategoriesGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCategoryResponse> {
        const response = await this.appCategoriesGetInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async appCategoriesParentGetToOneRelatedRaw(requestParameters: AppCategoriesParentGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCategoryWithoutIncludesResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling appCategoriesParentGetToOneRelated.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsAppCategories) {
            queryParameters['fields[appCategories]'] = requestParameters.fieldsAppCategories.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appCategories/{id}/parent`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppCategoryWithoutIncludesResponseFromJSON(jsonValue));
    }

    /**
     */
    async appCategoriesParentGetToOneRelated(requestParameters: AppCategoriesParentGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCategoryWithoutIncludesResponse> {
        const response = await this.appCategoriesParentGetToOneRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async appCategoriesSubcategoriesGetToManyRelatedRaw(requestParameters: AppCategoriesSubcategoriesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppCategoriesWithoutIncludesResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling appCategoriesSubcategoriesGetToManyRelated.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsAppCategories) {
            queryParameters['fields[appCategories]'] = requestParameters.fieldsAppCategories.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appCategories/{id}/subcategories`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppCategoriesWithoutIncludesResponseFromJSON(jsonValue));
    }

    /**
     */
    async appCategoriesSubcategoriesGetToManyRelated(requestParameters: AppCategoriesSubcategoriesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppCategoriesWithoutIncludesResponse> {
        const response = await this.appCategoriesSubcategoriesGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const AppCategoriesGetCollectionFilterPlatformsEnum = {
    Ios: 'IOS',
    MacOs: 'MAC_OS',
    TvOs: 'TV_OS',
    VisionOs: 'VISION_OS'
} as const;
export type AppCategoriesGetCollectionFilterPlatformsEnum = typeof AppCategoriesGetCollectionFilterPlatformsEnum[keyof typeof AppCategoriesGetCollectionFilterPlatformsEnum];
/**
 * @export
 */
export const AppCategoriesGetCollectionFieldsAppCategoriesEnum = {
    Parent: 'parent',
    Platforms: 'platforms',
    Subcategories: 'subcategories'
} as const;
export type AppCategoriesGetCollectionFieldsAppCategoriesEnum = typeof AppCategoriesGetCollectionFieldsAppCategoriesEnum[keyof typeof AppCategoriesGetCollectionFieldsAppCategoriesEnum];
/**
 * @export
 */
export const AppCategoriesGetCollectionIncludeEnum = {
    Parent: 'parent',
    Subcategories: 'subcategories'
} as const;
export type AppCategoriesGetCollectionIncludeEnum = typeof AppCategoriesGetCollectionIncludeEnum[keyof typeof AppCategoriesGetCollectionIncludeEnum];
/**
 * @export
 */
export const AppCategoriesGetInstanceFieldsAppCategoriesEnum = {
    Parent: 'parent',
    Platforms: 'platforms',
    Subcategories: 'subcategories'
} as const;
export type AppCategoriesGetInstanceFieldsAppCategoriesEnum = typeof AppCategoriesGetInstanceFieldsAppCategoriesEnum[keyof typeof AppCategoriesGetInstanceFieldsAppCategoriesEnum];
/**
 * @export
 */
export const AppCategoriesGetInstanceIncludeEnum = {
    Parent: 'parent',
    Subcategories: 'subcategories'
} as const;
export type AppCategoriesGetInstanceIncludeEnum = typeof AppCategoriesGetInstanceIncludeEnum[keyof typeof AppCategoriesGetInstanceIncludeEnum];
/**
 * @export
 */
export const AppCategoriesParentGetToOneRelatedFieldsAppCategoriesEnum = {
    Parent: 'parent',
    Platforms: 'platforms',
    Subcategories: 'subcategories'
} as const;
export type AppCategoriesParentGetToOneRelatedFieldsAppCategoriesEnum = typeof AppCategoriesParentGetToOneRelatedFieldsAppCategoriesEnum[keyof typeof AppCategoriesParentGetToOneRelatedFieldsAppCategoriesEnum];
/**
 * @export
 */
export const AppCategoriesSubcategoriesGetToManyRelatedFieldsAppCategoriesEnum = {
    Parent: 'parent',
    Platforms: 'platforms',
    Subcategories: 'subcategories'
} as const;
export type AppCategoriesSubcategoriesGetToManyRelatedFieldsAppCategoriesEnum = typeof AppCategoriesSubcategoriesGetToManyRelatedFieldsAppCategoriesEnum[keyof typeof AppCategoriesSubcategoriesGetToManyRelatedFieldsAppCategoriesEnum];
