/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AlternativeDistributionPackageDeltasResponse,
  AlternativeDistributionPackageVariantsResponse,
  AlternativeDistributionPackageVersionResponse,
  ErrorResponse,
} from '../models';
import {
    AlternativeDistributionPackageDeltasResponseFromJSON,
    AlternativeDistributionPackageDeltasResponseToJSON,
    AlternativeDistributionPackageVariantsResponseFromJSON,
    AlternativeDistributionPackageVariantsResponseToJSON,
    AlternativeDistributionPackageVersionResponseFromJSON,
    AlternativeDistributionPackageVersionResponseToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models';

export interface AlternativeDistributionPackageVersionsDeltasGetToManyRelatedRequest {
    id: string;
    fieldsAlternativeDistributionPackageDeltas?: Array<AlternativeDistributionPackageVersionsDeltasGetToManyRelatedFieldsAlternativeDistributionPackageDeltasEnum>;
    limit?: number;
}

export interface AlternativeDistributionPackageVersionsGetInstanceRequest {
    id: string;
    fieldsAlternativeDistributionPackageVersions?: Array<AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageVersionsEnum>;
    include?: Array<AlternativeDistributionPackageVersionsGetInstanceIncludeEnum>;
    fieldsAlternativeDistributionPackageVariants?: Array<AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageVariantsEnum>;
    fieldsAlternativeDistributionPackageDeltas?: Array<AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageDeltasEnum>;
    limitDeltas?: number;
    limitVariants?: number;
}

export interface AlternativeDistributionPackageVersionsVariantsGetToManyRelatedRequest {
    id: string;
    fieldsAlternativeDistributionPackageVariants?: Array<AlternativeDistributionPackageVersionsVariantsGetToManyRelatedFieldsAlternativeDistributionPackageVariantsEnum>;
    limit?: number;
}

/**
 * 
 */
export class AlternativeDistributionPackageVersionsApi extends runtime.BaseAPI {

    /**
     */
    async alternativeDistributionPackageVersionsDeltasGetToManyRelatedRaw(requestParameters: AlternativeDistributionPackageVersionsDeltasGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlternativeDistributionPackageDeltasResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling alternativeDistributionPackageVersionsDeltasGetToManyRelated.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsAlternativeDistributionPackageDeltas) {
            queryParameters['fields[alternativeDistributionPackageDeltas]'] = requestParameters.fieldsAlternativeDistributionPackageDeltas.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/alternativeDistributionPackageVersions/{id}/deltas`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AlternativeDistributionPackageDeltasResponseFromJSON(jsonValue));
    }

    /**
     */
    async alternativeDistributionPackageVersionsDeltasGetToManyRelated(requestParameters: AlternativeDistributionPackageVersionsDeltasGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlternativeDistributionPackageDeltasResponse> {
        const response = await this.alternativeDistributionPackageVersionsDeltasGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async alternativeDistributionPackageVersionsGetInstanceRaw(requestParameters: AlternativeDistributionPackageVersionsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlternativeDistributionPackageVersionResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling alternativeDistributionPackageVersionsGetInstance.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsAlternativeDistributionPackageVersions) {
            queryParameters['fields[alternativeDistributionPackageVersions]'] = requestParameters.fieldsAlternativeDistributionPackageVersions.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsAlternativeDistributionPackageVariants) {
            queryParameters['fields[alternativeDistributionPackageVariants]'] = requestParameters.fieldsAlternativeDistributionPackageVariants.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsAlternativeDistributionPackageDeltas) {
            queryParameters['fields[alternativeDistributionPackageDeltas]'] = requestParameters.fieldsAlternativeDistributionPackageDeltas.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limitDeltas !== undefined) {
            queryParameters['limit[deltas]'] = requestParameters.limitDeltas;
        }

        if (requestParameters.limitVariants !== undefined) {
            queryParameters['limit[variants]'] = requestParameters.limitVariants;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/alternativeDistributionPackageVersions/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AlternativeDistributionPackageVersionResponseFromJSON(jsonValue));
    }

    /**
     */
    async alternativeDistributionPackageVersionsGetInstance(requestParameters: AlternativeDistributionPackageVersionsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlternativeDistributionPackageVersionResponse> {
        const response = await this.alternativeDistributionPackageVersionsGetInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async alternativeDistributionPackageVersionsVariantsGetToManyRelatedRaw(requestParameters: AlternativeDistributionPackageVersionsVariantsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlternativeDistributionPackageVariantsResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling alternativeDistributionPackageVersionsVariantsGetToManyRelated.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsAlternativeDistributionPackageVariants) {
            queryParameters['fields[alternativeDistributionPackageVariants]'] = requestParameters.fieldsAlternativeDistributionPackageVariants.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/alternativeDistributionPackageVersions/{id}/variants`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AlternativeDistributionPackageVariantsResponseFromJSON(jsonValue));
    }

    /**
     */
    async alternativeDistributionPackageVersionsVariantsGetToManyRelated(requestParameters: AlternativeDistributionPackageVersionsVariantsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlternativeDistributionPackageVariantsResponse> {
        const response = await this.alternativeDistributionPackageVersionsVariantsGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const AlternativeDistributionPackageVersionsDeltasGetToManyRelatedFieldsAlternativeDistributionPackageDeltasEnum = {
    AlternativeDistributionKeyBlob: 'alternativeDistributionKeyBlob',
    FileChecksum: 'fileChecksum',
    Url: 'url',
    UrlExpirationDate: 'urlExpirationDate'
} as const;
export type AlternativeDistributionPackageVersionsDeltasGetToManyRelatedFieldsAlternativeDistributionPackageDeltasEnum = typeof AlternativeDistributionPackageVersionsDeltasGetToManyRelatedFieldsAlternativeDistributionPackageDeltasEnum[keyof typeof AlternativeDistributionPackageVersionsDeltasGetToManyRelatedFieldsAlternativeDistributionPackageDeltasEnum];
/**
 * @export
 */
export const AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageVersionsEnum = {
    AlternativeDistributionPackage: 'alternativeDistributionPackage',
    Deltas: 'deltas',
    FileChecksum: 'fileChecksum',
    State: 'state',
    Url: 'url',
    UrlExpirationDate: 'urlExpirationDate',
    Variants: 'variants',
    Version: 'version'
} as const;
export type AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageVersionsEnum = typeof AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageVersionsEnum[keyof typeof AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageVersionsEnum];
/**
 * @export
 */
export const AlternativeDistributionPackageVersionsGetInstanceIncludeEnum = {
    AlternativeDistributionPackage: 'alternativeDistributionPackage',
    Deltas: 'deltas',
    Variants: 'variants'
} as const;
export type AlternativeDistributionPackageVersionsGetInstanceIncludeEnum = typeof AlternativeDistributionPackageVersionsGetInstanceIncludeEnum[keyof typeof AlternativeDistributionPackageVersionsGetInstanceIncludeEnum];
/**
 * @export
 */
export const AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageVariantsEnum = {
    AlternativeDistributionKeyBlob: 'alternativeDistributionKeyBlob',
    FileChecksum: 'fileChecksum',
    Url: 'url',
    UrlExpirationDate: 'urlExpirationDate'
} as const;
export type AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageVariantsEnum = typeof AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageVariantsEnum[keyof typeof AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageVariantsEnum];
/**
 * @export
 */
export const AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageDeltasEnum = {
    AlternativeDistributionKeyBlob: 'alternativeDistributionKeyBlob',
    FileChecksum: 'fileChecksum',
    Url: 'url',
    UrlExpirationDate: 'urlExpirationDate'
} as const;
export type AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageDeltasEnum = typeof AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageDeltasEnum[keyof typeof AlternativeDistributionPackageVersionsGetInstanceFieldsAlternativeDistributionPackageDeltasEnum];
/**
 * @export
 */
export const AlternativeDistributionPackageVersionsVariantsGetToManyRelatedFieldsAlternativeDistributionPackageVariantsEnum = {
    AlternativeDistributionKeyBlob: 'alternativeDistributionKeyBlob',
    FileChecksum: 'fileChecksum',
    Url: 'url',
    UrlExpirationDate: 'urlExpirationDate'
} as const;
export type AlternativeDistributionPackageVersionsVariantsGetToManyRelatedFieldsAlternativeDistributionPackageVariantsEnum = typeof AlternativeDistributionPackageVersionsVariantsGetToManyRelatedFieldsAlternativeDistributionPackageVariantsEnum[keyof typeof AlternativeDistributionPackageVersionsVariantsGetToManyRelatedFieldsAlternativeDistributionPackageVariantsEnum];
